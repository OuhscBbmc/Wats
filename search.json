[{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"figure-1-cartesian-rolling---2005-version","dir":"Articles","previous_headings":"","what":"Figure 1: Cartesian Rolling - 2005 Version","title":"Figures for the MBR Manuscript","text":"Figure 1: Raw monthly birth rates (General Fertility Rates; GFRs) Oklahoma County, 1990-1999, plotted linear plot; “bombing effect” located ten months Oklahoma City bombing.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"figure-2-cartesian-rolling---2014-version","dir":"Articles","previous_headings":"","what":"Figure 2: Cartesian Rolling - 2014 Version","title":"Figures for the MBR Manuscript","text":"Smoothed monthly birth rates (General Fertility Rates; GFRs) Oklahoma County, 1990-1999, plotted linear plot. top plot shows connected raw data February smoother; middle plot shows smoothing 12-month moving average, blue/green line, superimposed February smoother, red line); bottom plot shows smoothers confidence bands, H-spreads defined using distribution GFRs given month 11 previous months. First, R packages loaded, variables functions defined.","code":"change_month <- base::as.Date(\"1996-02-15\") #as.Date(\"1995-04-19\") + lubridate::weeks(39) = \"1996-01-17\" set.seed(444) # So bootstrap won't trigger a git diff  vp_layout <- function(x, y) {   grid::viewport(layout.pos.row = x, layout.pos.col = y) } full_spread <- function(scores) {   base::range(scores) # A new function isn't necessary.  It's defined in order to be consistent. } h_spread <- function(scores) {   stats::quantile(x = scores, probs = c(.25, .75)) } se_spread <- function(scores) {   base::mean(scores) + base::c(-1, 1) * stats::sd(scores) / base::sqrt(base::sum(!base::is.na(scores))) } boot_spread <- function(scores, conf = .68) {   plugin <- function(d, i) {     base::mean(d[i])   }    distribution <- boot::boot(data = scores, plugin, R = 99) # 999 for the publication   ci <- boot::boot.ci(distribution, type = c(\"bca\"), conf = conf)   ci$bca[4:5] # The fourth & fifth elements correspond to the lower & upper bound. }  dark_theme <- ggplot2::theme(   axis.title          = ggplot2::element_text(color = \"gray30\", size = 9),   axis.text.x         = ggplot2::element_text(color = \"gray30\", hjust = 0),   axis.text.y         = ggplot2::element_text(color = \"gray30\"),   axis.ticks          = ggplot2::element_blank(),   # panel.grid.minor.y  = element_line(color = \"gray95\", linewidth = .1),   # panel.grid.major    = element_line(color = \"gray90\", linewidth = .1),   panel.spacing       = grid::unit(c(0, 0, 0, 0), \"cm\"),   plot.margin         = grid::unit(c(0, 0, 0, 0), \"cm\") ) # qplot(mtcars$hp) + dark_theme  light_theme <-   dark_theme +   ggplot2::theme(     axis.title          = ggplot2::element_text(color = \"gray80\", size = 9),     axis.text.x         = ggplot2::element_text(color = \"gray80\", hjust = 0),     axis.text.y         = ggplot2::element_text(color = \"gray80\"),     panel.grid.minor.y  = ggplot2::element_line(color = \"gray99\", linewidth = .1),     panel.grid.major    = ggplot2::element_line(color = \"gray95\", linewidth = .1)   ) date_sequence <-   base::seq.Date(     from = base::as.Date(\"1990-01-01\"),     to   = base::as.Date(\"1999-01-01\"),     by   = \"years\"   ) x_scale <-   ggplot2::scale_x_date(     breaks = date_sequence,     labels = scales::date_format(\"%Y\")   ) # This keeps things proportional down the three frames. x_scale_blank <-   ggplot2::scale_x_date(     breaks = date_sequence,     labels = NULL   )"},{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"individual-components","dir":"Articles","previous_headings":"Figure 2: Cartesian Rolling - 2014 Version","what":"Individual Components","title":"Figures for the MBR Manuscript","text":"basic linear rolling graph. doesn’t require much specification, work wide range appropriate datasets. first (unpublished) graph displays components.  version manuscript tweaked take advantage certain features dataset. looks like three stylized panels combined.","code":"# Uncomment the next two lines to use the version built into the package.  By default, it uses the # CSV to promote reproducible research, since the CSV format is more open and accessible to more software.  ds_linear_all <-   county_month_birth_rate_2005_version |>   tibble::as_tibble()  ds_linear_okc <-   ds_linear_all |>   dplyr::filter(county_name == \"oklahoma\") |>   augment_year_data_with_month_resolution(date_name = \"date\")  portfolio_cartesian <-   annotate_data(     ds_linear_okc,     dv_name         = \"birth_rate\",     center_function = stats::median,     spread_function = h_spread   )  cartesian_rolling(   ds_linear           = portfolio_cartesian$ds_linear,   x_name              = \"date\",   y_name              = \"birth_rate\",   stage_id_name       = \"stage_id\",   change_points       = change_month,   change_point_labels = \"Bombing Effect\" ) top_panel <-   Wats::cartesian_rolling(     ds_linear             = portfolio_cartesian$ds_linear,     x_name                = \"date\",     y_name                = \"birth_rate\",     stage_id_name         = \"stage_id\",     change_points         = change_month,     y_title               = \"General Fertility Rate\",     change_point_labels   = \"Bombing Effect\",     draw_rolling_band     = FALSE,     draw_rolling_line     = FALSE   )  middle_panel <-   Wats::cartesian_rolling(     ds_linear             = portfolio_cartesian$ds_linear,     x_name                = \"date\",     y_name                = \"birth_rate\",     stage_id_name         = \"stage_id\",     change_points         = change_month,     y_title               = \"General Fertility Rate\",     change_point_labels   = \"\",     draw_rolling_band     = FALSE,     draw_jagged_line      = FALSE   )  bottom_panel <-   Wats::cartesian_rolling(     ds_linear             = portfolio_cartesian$ds_linear,     x_name                = \"date\",     y_name                = \"birth_rate\",     stage_id_name         = \"stage_id\",     change_points         = change_month,     y_title               = \"General Fertility Rate\",     change_point_labels   = \"\",     # draw_rolling_band   = FALSE,     draw_jagged_line      = FALSE   )  top_panel    <- top_panel    + x_scale       + dark_theme middle_panel <- middle_panel + x_scale       + dark_theme bottom_panel <- bottom_panel + x_scale_blank + dark_theme  grid::grid.newpage() grid::pushViewport(grid::viewport(layout = grid::grid.layout(3,1))) print(top_panel   , vp = vp_layout(1, 1)) print(middle_panel, vp = vp_layout(2, 1)) print(bottom_panel, vp = vp_layout(3, 1)) grid::popViewport()"},{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"figure-4-cartesian-periodic","dir":"Articles","previous_headings":"","what":"Figure 4: Cartesian Periodic","title":"Figures for the MBR Manuscript","text":"Cartesian plot GFR time series data Oklahoma County, H-spread Bands superimposed.","code":"cartesian_periodic <-   Wats::cartesian_periodic(     portfolio_cartesian$ds_linear,     portfolio_cartesian$ds_periodic,     x_name                  = \"date\",     y_name                  = \"birth_rate\",     stage_id_name           = \"stage_id\",     change_points           = change_month,     change_point_labels     = \"Bombing Effect\",     y_title                 = \"General Fertility Rate\",     draw_periodic_band      = TRUE #The only difference from the simple linear graph above   ) print(cartesian_periodic) cartesian_periodic <- cartesian_periodic + x_scale + dark_theme print(cartesian_periodic)"},{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"figure-5-polar-periodic","dir":"Articles","previous_headings":"","what":"Figure 5: Polar Periodic","title":"Figures for the MBR Manuscript","text":"Wrap Around Time Series (WATS Plot) Oklahoma City GFR data, 1990-1999.","code":"portfolio_polar <-   polarize_cartesian(     ds_linear                       = portfolio_cartesian$ds_linear,     ds_stage_cycle                  = portfolio_cartesian$ds_stage_cycle,     y_name                          = \"birth_rate\",     stage_id_name                   = \"stage_id\",     plotted_point_count_per_cycle   = 7200   )  grid::grid.newpage() polar_periodic(   ds_linear             = portfolio_polar$ds_observed_polar,   ds_stage_cycle        = portfolio_polar$ds_stage_cycle_polar,   y_name                = \"radius\",   stage_id_name         = \"stage_id\",   draw_periodic_band    = FALSE,   draw_stage_labels     = TRUE,   draw_radius_labels    = TRUE,   cardinal_labels       = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\") )"},{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"figure-6-wats-and-cartesian","dir":"Articles","previous_headings":"","what":"Figure 6: WATS and Cartesian","title":"Figures for the MBR Manuscript","text":"Wrap Around Time Series (WATS Plot) Oklahoma City GFR data, 1990-1999.","code":"portfolio_polar <-   Wats::polarize_cartesian(     ds_linear                     = portfolio_cartesian$ds_linear,     ds_stage_cycle                = portfolio_cartesian$ds_stage_cycle,     y_name                        = \"birth_rate\",     stage_id_name                 = \"stage_id\",     plotted_point_count_per_cycle = 7200   )  grid::grid.newpage() grid::pushViewport(grid::viewport(   layout = grid::grid.layout(     nrow    = 2,     ncol    = 2,     respect = TRUE,     widths  = grid::unit(c(1,  1), c(\"null\", \"null\")),     heights = grid::unit(c(1, .5), c(\"null\", \"null\"))   ),   gp = grid::gpar(cex = 1, fill = NA) ))  ## Create top left panel grid::pushViewport(grid::viewport(layout.pos.col = 1, layout.pos.row = 1)) top_left_panel <-   Wats::polar_periodic(     ds_linear             = portfolio_polar$ds_observed_polar,     ds_stage_cycle_polar  = portfolio_polar$ds_stage_cycle_polar,     y_name                = \"radius\",     stage_id_name         = \"stage_id\", #graph_ceiling = 7,     cardinal_labels       = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\")   ) grid::upViewport()  ## Create top right panel grid::pushViewport(grid::viewport(layout.pos.col = 2, layout.pos.row = 1)) top_right_panel <-   Wats::polar_periodic(   ds_linear             = portfolio_polar$ds_observed_polar,   ds_stage_cycle_polar  = portfolio_polar$ds_stage_cycle_polar,   y_name                = \"radius\",   stage_id_name         = \"stage_id\", #graph_ceiling = 7,   draw_observed_line    = FALSE,   cardinal_labels       = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\"),   origin_label          = NULL ) grid::upViewport()  ## Create bottom panel grid::pushViewport(grid::viewport(layout.pos.col = 1:2, layout.pos.row = 2, gp = grid::gpar(cex = 1))) print(cartesian_periodic, vp = vp_layout(x = 1:2, y = 2)) # Print across both columns of the bottom row. grid::upViewport()"},{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"figure-7-county-comparison","dir":"Articles","previous_headings":"","what":"Figure 7: County Comparison","title":"Figures for the MBR Manuscript","text":"figure compares Oklahoma County () largest urban counties.  12 counties Ronnie collected birth records . extended graph manuscript.","code":"# ds_linear_all <- Wats::augment_year_data_with_month_resolution(ds_linear = county_month_birth_rate_2005_version, date_name=\"date\")  # Identify the average size of the fecund population ds_linear_all |>   dplyr::group_by(county_name) |>   dplyr::summarize(     Mean = base::mean(fecund_population)   ) |>   dplyr::ungroup()  [38;5;246m# A tibble: 12 × 2 [39m    county_name     Mean     [3m [38;5;246m<chr> [39m [23m           [3m [38;5;246m<dbl> [39m [23m  [38;5;250m 1 [39m canadian       [4m1 [24m [4m8 [24m332.  [38;5;250m 2 [39m cleveland      [4m4 [24m [4m8 [24m865.  [38;5;250m 3 [39m comanche       [4m2 [24m [4m6 [24m268.  [38;5;250m 4 [39m creek          [4m1 [24m [4m3 [24m402.  [38;5;250m 5 [39m logan           [4m7 [24m065.  [38;5;250m 6 [39m mcclain         [4m5 [24m434.  [38;5;250m 7 [39m oklahoma      [4m1 [24m [4m4 [24m [4m6 [24m882.  [38;5;250m 8 [39m osage           [4m8 [24m529.  [38;5;250m 9 [39m pottawatomie   [4m1 [24m [4m3 [24m604.  [38;5;250m10 [39m rogers         [4m1 [24m [4m3 [24m383.  [38;5;250m11 [39m tulsa         [4m1 [24m [4m2 [24m [4m3 [24m783.  [38;5;250m12 [39m wagoner        [4m1 [24m [4m1 [24m580. graph_row_comparison <- function(     row_label       = \"\",     .county_name    = \"oklahoma\",     spread_function = h_spread,     change_month    = as.Date(\"1996-02-15\") ) {   ds_linear <-     ds_linear_all |>     dplyr::filter(county_name == .county_name) |>     Wats::augment_year_data_with_month_resolution(date_name = \"date\")    portfolio_cartesian <-     ds_linear |>     Wats::annotate_data(       dv_name         = \"birth_rate\",       center_function = stats::median,       spread_function = spread_function     )    portfolio_polar <-     portfolio_cartesian$ds_linear |>     Wats::polarize_cartesian(       ds_stage_cycle                = portfolio_cartesian$ds_stage_cycle,       y_name                        = \"birth_rate\",       stage_id_name                 = \"stage_id\",       plotted_point_count_per_cycle = 7200     )    cartesian_periodic <-     portfolio_cartesian$ds_linear |>     Wats::cartesian_periodic(       portfolio_cartesian$ds_periodic,       x_name                            = \"date\",       y_name                            = \"birth_rate\",       stage_id_name                     = \"stage_id\",       change_points                     = change_month,       change_point_labels               = \"\"   )    grid::pushViewport(grid::viewport(     layout =       grid::grid.layout(         nrow    = 1,         ncol    = 3,         respect = FALSE,         widths  = grid::unit(c(1.5, 1, 3), c(\"line\", \"null\", \"null\"))       ),     gp = grid::gpar(cex = 1, fill = NA)   ))    grid::pushViewport(grid::viewport(layout.pos.col = 1))   grid::grid.rect(gp = grid::gpar(fill = \"gray90\", col = NA))   grid::grid.text(row_label, rot = 90)   grid::popViewport()    grid::pushViewport(grid::viewport(layout.pos.col = 2))   Wats::polar_periodic(     ds_linear               = portfolio_polar$ds_observed_polar,     ds_stage_cycle_polar    = portfolio_polar$ds_stage_cycle_polar,     draw_observed_line      = FALSE,     y_name                  = \"radius\",     stage_id_name           = \"stage_id\",     origin_label            = NULL,     plot_margins            = c(0, 0, 0, 0)   )   grid::popViewport()    grid::pushViewport(grid::viewport(layout.pos.col = 3))   print(cartesian_periodic + x_scale + light_theme, vp = vp_layout(x = 1, y = 1))   grid::popViewport()   grid::popViewport() #Finish the row }  county_names  <- c(\"Comanche\", \"Cleveland\", \"Oklahoma\", \"Tulsa\", \"Rogers\") counties      <- tolower(county_names)  grid::grid.newpage() grid::pushViewport(grid::viewport(   layout  = grid::grid.layout(nrow = length(counties), ncol = 1),   gp      = grid::gpar(cex = 1, fill = NA) ))  for (i in base::seq_along(counties)) {   grid::pushViewport(grid::viewport(layout.pos.row = i))   graph_row_comparison(.county_name = counties[i], row_label = county_names[i])   grid::popViewport() } grid::popViewport() counties <- base::sort(base::unique(ds_linear_all$county_name)) county_names <- c(\"Canadian\", \"Cleveland\", \"Comanche\", \"Creek\", \"Logan\", \"McClain\", \"Oklahoma\", \"Osage\", \"Pottawatomie\", \"Rogers\", \"Tulsa\", \"Wagoner\")  grid::grid.newpage() grid::pushViewport(grid::viewport(   layout  = grid::grid.layout(nrow = base::length(counties), ncol = 1),   gp      = grid::gpar(cex = 1, fill = NA) ))  for (i in base::seq_along(counties)) {   grid::pushViewport(grid::viewport(layout.pos.row = i))   graph_row_comparison(.county_name = counties[i], row_label = county_names[i])   grid::popViewport() } grid::popViewport()"},{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"figure-8-error-band-comparison","dir":"Articles","previous_headings":"","what":"Figure 8: Error Band Comparison","title":"Figures for the MBR Manuscript","text":"figure demonstrates WATS accommodates many types error bands.","code":"spreads <- c(\"h_spread\", \"full_spread\", \"se_spread\", \"boot_spread\") spread_names <- c(\"H-Spread\", \"Range\", \"+/-1 SE\", \"Bootstrap\") grid::grid.newpage() grid::pushViewport(grid::viewport(   layout  = grid::grid.layout(nrow = base::length(spreads), ncol = 1),   gp      = grid::gpar(cex = 1, fill = NA) )) for (i in base::seq_along(spreads)) {   grid::pushViewport(grid::viewport(layout.pos.row = i))   graph_row_comparison(spread_function = base::get(spreads[i]), row_label = spread_names[i])   grid::upViewport() } grid::upViewport()"},{"path":"https://ouhscbbmc.github.io/Wats/articles/mbr-figures.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Figures for the MBR Manuscript","text":"current vignette build system using following software.","code":"Report created by runner at Mon Jul 17 14:02:34 2023, +0000 R version 4.3.1 (2023-06-16) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 22.04.2 LTS  Matrix products: default BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0  locale:  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8         [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8     [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C     time zone: UTC tzcode source: system (glibc)  attached base packages: [1] stats     graphics  grDevices utils     datasets  methods   base       other attached packages: [1] Wats_1.0.1.9000  loaded via a namespace (and not attached):  [1] sass_0.4.6         utf8_1.2.3         generics_0.1.3     stringi_1.7.12      [5] lattice_0.21-8     digest_0.6.33      magrittr_2.0.3     RColorBrewer_1.1-3  [9] evaluate_0.21      grid_4.3.1         timechange_0.2.0   fastmap_1.1.1      [13] rprojroot_2.0.3    jsonlite_1.8.7     purrr_1.0.1        fansi_1.0.4        [17] scales_1.2.1       textshaping_0.3.6  jquerylib_0.1.4    cli_3.6.1          [21] rlang_1.1.1        munsell_0.5.0      withr_2.5.0        cachem_1.0.8       [25] yaml_2.3.7         tools_4.3.1        memoise_2.0.1      dplyr_1.1.2        [29] colorspace_2.1-0   ggplot2_3.4.2      boot_1.3-28.1      vctrs_0.6.3        [33] R6_2.5.1           zoo_1.8-12         lifecycle_1.0.3    lubridate_1.9.2    [37] testit_0.13        stringr_1.5.0      fs_1.6.2           ragg_1.2.5         [41] pkgconfig_2.0.3    desc_1.4.2         pkgdown_2.0.7      pillar_1.9.0       [45] bslib_0.5.0        gtable_0.3.3       glue_1.6.2         systemfonts_1.0.4  [49] highr_0.10         xfun_0.39          tibble_3.2.1       tidyselect_1.2.0   [53] knitr_1.43         farver_2.1.1       htmltools_0.5.5    labeling_0.4.2     [57] rmarkdown_2.23     compiler_4.3.1"},{"path":"https://ouhscbbmc.github.io/Wats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Beasley. Author, maintainer, copyright holder. Joe Rodgers. Author. Matthew Schuelke. Contributor. Ronnie Coleman. Contributor. Mark Joseph Lachowicz. Contributor. Oklahoma Shared Clinical Translational Resource (OSCTR). Funder.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Joseph Lee Rodgers, William Howard Beasley, Matthew Schuelke. Graphical Data Analysis Circle:  Wrap-around Time Series Plots (Interrupted) Time Series Designs.","code":"@Article{,   author = {{Joseph Lee Rodgers} and {William Howard Beasley} and {Matthew Schuelke}},   title = {Graphical Data Analysis on the Circle:  Wrap-around Time Series Plots for (Interrupted) Time Series Designs},   journal = {Multivariate Behavioral Research},   year = {2014},   volume = {49},   number = {6},   pages = {571--580},   publisher = {Taylor and Francis},   doi = {10.1080/00273171.2014.946589},   url = {https://github.com/OuhscBbmc/Wats}, }"},{"path":"https://ouhscbbmc.github.io/Wats/index.html","id":"wats","dir":"","previous_headings":"","what":"Wrap Around Time Series Graphics","title":"Wrap Around Time Series Graphics","text":"Welcome Wats Package. implements approaches described Joseph Lee Rodgers, William Howard Beasley, Matthew Schuelke (2014). Wrap-around Time Series Plots (WATS Plots) Interrupted Time Series Designs: Applications Fertility Rates Oklahoma City Bombing. Multivariate Behavioral Research. figures can viewed vignettes, Handouts document. release version Wats available CRAN.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/index.html","id":"article-abstract","dir":"","previous_headings":"","what":"Article Abstract","title":"Wrap Around Time Series Graphics","text":"Many data structures, particular time series data, naturally seasonal, cyclical, otherwise circular. Past graphical methods time series focused linear plots. paper, move graphical analysis onto circle. focus two methods, one old one new. Rose diagrams circular histograms, can produced several different forms using RRose software system. addition, propose, develop, illustrate new circular graphical method, called Wrap-Around Time Series Plots (WATS plots) useful support time series analyses general, particular relation interrupted time series designs. illustrate use WATS Plots interrupted time series design evaluating effect Oklahoma City bombing birth rates Oklahoma County ten years surrounding bombing Murrah Building Oklahoma City. compare WATS Plots linear time series representations smoothing. method shown advantages relation ; example, WATS Plots clearly show existence effect size fertility differential. Keywords: time series, interrupted time series design, group differences, graphical analysis, circular data, H-spread","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ouhscbbmc.github.io/Wats/index.html","id":"reproducible-research","dir":"","previous_headings":"","what":"Reproducible Research","title":"Wrap Around Time Series Graphics","text":"Wats package installed local machine, reproduce.R script starts initial datasets (.e., vital statistics birth counts US Census population estimates) create derivative datasets resulting graphs analysis.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/index.html","id":"nonstandard-directories","dir":"","previous_headings":"","what":"Nonstandard Directories","title":"Wrap Around Time Series Graphics","text":"following directories part standard R package: datasets/: CSV versions *.rda data frames officially included package. incoming/unprocessed files stored datasets/raw/. processed files stored datasets/derived/. documentation--developers/: Notes links help package developers set computer. Typical package users won’t need . publication-graphs/: deprecated location contains loose graphs older versions manuscript. playgrounds/: R snippets help developers experiment potential new features. utility/: R scripts aren’t incorporated package. help automate certain tasks, document parts package created.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Wrap Around Time Series Graphics","text":"released CRAN version Wats can installed R . latest development version Wats can installed GitHub installing remotes package.","code":"install.packages(\"Wats\") install.packages(\"remotes\") remotes::install_github(\"OuhscBbmc/Wats\")"},{"path":"https://ouhscbbmc.github.io/Wats/index.html","id":"code-repository","dir":"","previous_headings":"","what":"Code Repository","title":"Wrap Around Time Series Graphics","text":"software written primarily R, MIT License. DOI major release repository 10.5281/zenodo.11921. (DOI article 10.1080/00273171.2014.946589.)","code":""},{"path":"https://ouhscbbmc.github.io/Wats/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Wrap Around Time Series Graphics","text":"Continued development maintenance package supported Oklahoma Shared Clinical Translational Resources (OSCTR, U54GM104938) Institutional Development Award (IDeA) NIGMS. content solely responsibility authors necessarily represent official views National Institutes Health.","code":""},{"path":[]},{"path":"https://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap Around Time Series graphics — Wats-package","title":"Wrap Around Time Series graphics — Wats-package","text":"Wrap-around Time Series (WATS) Plots Interrupted Time Series Designs Seasonal Patterns","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Wrap Around Time Series graphics — Wats-package","text":"release version available CRAN running install.packages('Wats'). recent development version available GitHub running remotes::install_github(\"OuhscBbmc/Wats\"). (make sure remotes already installed). trouble package, please install development version. solve problem, please create issue, email . Funding Continued development maintenance package supported Oklahoma Shared Clinical Translational Resources (OSCTR, U54GM104938) Institutional Development Award (IDeA) NIGMS. content solely responsibility authors necessarily represent official views National Institutes Health.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wrap Around Time Series graphics — Wats-package","text":"Rodgers, J.L., Beasley, W.H., Schuelke, M. (2014). Graphical Data Analysis Circle:  Wrap-around Time Series Plots (Interrupted) Time Series Designs. Multivariate Behavioral Research. Rodgers, J.L., St. John, C. . & Coleman R. (2005). Fertility Go Oklahoma City Bombing?  Analysis Births Metropolitan Counties Oklahoma, 1990-1999. Demography, 42, 675-692.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrap Around Time Series graphics — Wats-package","text":"William Howard Beasley --Associate Professor Research, University Oklahoma Health Sciences Center, Dept Pediatrics, Biomedical Behavioral Methodology Core (BBMC) Joseph Lee Rodgers --Director, Quantitative Methods, Department Psychology Human Development, Peabody College, 230 Appleton Pl #552, Hobbs 202C, Vanderbilt University, Nashville, TN 37203. Matthew Schuelke --Senior Statistician, Office Vice President Research Saint Louis University","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/annotate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds midpoints and bands for the within and between cycles. — annotate_data","title":"Finds midpoints and bands for the within and between cycles. — annotate_data","text":"Finds midpoints bands within cycles. second two functions needs called produce WATS Plots.  AugmentZZZ first.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/annotate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds midpoints and bands for the within and between cycles. — annotate_data","text":"","code":"annotate_data(   ds_linear,   dv_name,   center_function,   spread_function,   cycle_tally_name = \"cycle_tally\",   stage_id_name = \"stage_id\",   stage_progress_name = \"stage_progress\",   proportion_through_cycle_name = \"proportion_through_cycle\",   proportion_id_name = \"proportion_id\",   terminal_point_in_cycle_name = \"terminal_point_in_cycle\" )"},{"path":"https://ouhscbbmc.github.io/Wats/reference/annotate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds midpoints and bands for the within and between cycles. — annotate_data","text":"ds_linear data.frame containing detailed data. dv_name name dependent/criterion variable. center_function function calculate center subsample. spread_function function calculate bands subsample. cycle_tally_name variable name indicating many cycles completed. stage_id_name variable name indicating stage. typical interrupted time series, values \"1\" interruption \"2\" . stage_progress_name variable name indicating stage decimal form. mostly internal uses. proportion_through_cycle_name variable name indicating far point cycle.  example, 0 degrees 0, 180 degrees 0.5, 359 degrees 0.9972, 360 degrees 0. proportion_id_name variable name indicating ordinal position cycle. terminal_point_in_cycle_name variable name indicating last point within given cycle.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/annotate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds midpoints and bands for the within and between cycles. — annotate_data","text":"Returns tibble::tibble() additional variables. TODO: say variables .","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/annotate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds midpoints and bands for the within and between cycles. — annotate_data","text":"","code":"system.time({ library(Wats) ds_linear <-   Wats::county_month_birth_rate_2005_version |>   dplyr::filter(county_name == \"oklahoma\") |>   augment_year_data_with_month_resolution(date_name = \"date\")  h_spread <- \\(scores) { quantile(x = scores, probs = c(.25, .75)) }  portfolio <- annotate_data(   ds_linear       = ds_linear,   dv_name         = \"birth_rate\",   center_function = median,   spread_function = h_spread ) portfolio$ds_stage_cycle portfolio$ds_linear portfolio$ds_periodic }) #>    user  system elapsed  #>   0.398   0.024   0.422"},{"path":"https://ouhscbbmc.github.io/Wats/reference/augment_cycle_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates variables necessary for WATS Plots — augment_cycle_data","title":"Calculates variables necessary for WATS Plots — augment_cycle_data","text":"Calculates variables necessary WATS Plots.  first two functions needs called produce WATS Plots.  annotate_data() second.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/augment_cycle_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates variables necessary for WATS Plots — augment_cycle_data","text":"","code":"augment_year_data_with_month_resolution(ds_linear, date_name) augment_year_data_with_second_resolution(ds_linear, date_name)"},{"path":"https://ouhscbbmc.github.io/Wats/reference/augment_cycle_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates variables necessary for WATS Plots — augment_cycle_data","text":"ds_linear data.frame containing detailed data. date_name variable name ds_linear containing date datetime value.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/augment_cycle_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates variables necessary for WATS Plots — augment_cycle_data","text":"Returns tibble::tibble additional variables: cycle_tally, proportion_through_cycle, proportion_id, terminal_point_in_cycle.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/augment_cycle_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates variables necessary for WATS Plots — augment_cycle_data","text":"","code":"library(Wats) ds_linear <-   Wats::county_month_birth_rate_2005_version |>   dplyr::filter(county_name == \"oklahoma\") |>   augment_year_data_with_month_resolution(date_name = \"date\")  head(ds_linear) #> # A tibble: 6 × 18 #>   fips  county_name  year month fecund_population birth_count date       #>   <chr> <chr>       <int> <int>             <int>       <int> <date>     #> 1 40109 oklahoma     1990     1            143192         853 1990-01-15 #> 2 40109 oklahoma     1990     2            143278         758 1990-02-15 #> 3 40109 oklahoma     1990     3            143365         886 1990-03-15 #> 4 40109 oklahoma     1990     4            143452         871 1990-04-15 #> 5 40109 oklahoma     1990     5            143538         822 1990-05-15 #> 6 40109 oklahoma     1990     6            143625         834 1990-06-15 #> # ℹ 11 more variables: days_in_month <int>, days_in_year <int>, stage_id <int>, #> #   birth_rate_monthly <dbl>, birth_rate <dbl>, cycle_tally <dbl>, #> #   proportion_through_cycle <dbl>, proportion_id <dbl>, #> #   starting_point_in_cycle <lgl>, terminal_point_in_cycle <lgl>, #> #   stage_progress <dbl>"},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_periodic.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Plot with Periodic Elements — cartesian_periodic","title":"Linear Plot with Periodic Elements — cartesian_periodic","text":"Shows interrupted time series Cartesian coordinates periodic/cyclic components.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_periodic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Plot with Periodic Elements — cartesian_periodic","text":"","code":"cartesian_periodic(   ds_linear,   ds_periodic,   x_name,   y_name,   stage_id_name,   periodic_lower_name = \"position_lower\",   periodic_upper_name = \"position_upper\",   palette_dark = NULL,   palette_light = NULL,   change_points = NULL,   change_point_labels = NULL,   draw_periodic_band = TRUE,   jagged_point_size = 2,   jagged_line_size = 0.5,   band_alpha_dark = 0.4,   band_alpha_light = 0.15,   change_line_alpha = 0.5,   change_line_size = 3,   title = NULL,   x_title = NULL,   y_title = NULL )"},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_periodic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Plot with Periodic Elements — cartesian_periodic","text":"ds_linear data.frame containing simple linear data. one record per observation. ds_periodic data.frame containing reoccurring/periodic bands. one record per observation per stage. three stages, data.frame three times many rows ds_linear. x_name variable name containing date. y_name variable name containing dependent/criterion variable. stage_id_name variable name indicating stage record belongs . example, first interruption, stage_id \"1\", \"2\" afterwards. periodic_lower_name variable name showing lower bound stage's periodic estimate. periodic_upper_name variable name showing upper bound stage's periodic estimate. palette_dark vector colors used dark/heavy graphical elements. vector one color stage_id value.  vector specified, default chosen, based number stages. palette_light vector colors used light graphical elements. vector one color stage_id value.  vector specified, default chosen, based number stages. change_points vector values indicate interruptions stages. typically works best Date POSIXct class. change_point_labels text plotted interruption. draw_periodic_band boolean value indicating bands plotted (whose values take periodic_lower_name periodic_upper_name). jagged_point_size size observed data points. jagged_line_size size line connecting observed data points. band_alpha_dark amount transparency band appropriate stage's x values. band_alpha_light amount transparency band comparison stages given x value. change_line_alpha amount transparency marking interruption. change_line_size width line marking interruption. title string describing plot. x_title string describing x-axis. y_title string describing y-axis.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_periodic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Plot with Periodic Elements — cartesian_periodic","text":"Returns ggplot2 graphing object","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_periodic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Plot with Periodic Elements — cartesian_periodic","text":"","code":"library(Wats) # Load the package change_month <- base::as.Date(\"1996-02-15\") ds_linear <-   Wats::county_month_birth_rate_2005_version |>   dplyr::filter(county_name == \"oklahoma\") |>   augment_year_data_with_month_resolution(date_name = \"date\")  h_spread  <- function(scores) { quantile(x = scores, probs = c(.25, .75)) }  portfolio <- annotate_data(   ds_linear,   dv_name = \"birth_rate\",   center_function = median,   spread_function = h_spread )  cartesian_periodic(   portfolio$ds_linear,   portfolio$ds_periodic,   x_name               = \"date\",   y_name               = \"birth_rate\",   stage_id_name        = \"stage_id\",   change_points        = change_month,   change_point_labels  = \"Bombing Effect\" )"},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_rolling.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Plot with Rolling Summaries — cartesian_rolling","title":"Linear Plot with Rolling Summaries — cartesian_rolling","text":"Shows interrupted time series Cartesian coordinates without periodic/cyclic components.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_rolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Plot with Rolling Summaries — cartesian_rolling","text":"","code":"cartesian_rolling(   ds_linear,   x_name,   y_name,   stage_id_name,   rolling_lower_name = \"rolling_lower\",   rolling_center_name = \"rolling_center\",   rolling_upper_name = \"rolling_upper\",   palette_dark = NULL,   palette_light = NULL,   color_sparse = grDevices::adjustcolor(\"tan1\", 0.5),   change_points = NULL,   change_point_labels = NULL,   draw_jagged_line = TRUE,   draw_rolling_line = TRUE,   draw_rolling_band = TRUE,   draw_sparse_line_and_points = TRUE,   jagged_point_size = 2,   jagged_line_size = 0.5,   rolling_line_size = 1,   sparse_point_size = 4,   sparse_line_size = 0.5,   band_alpha = 0.4,   change_line_alpha = 0.5,   change_line_size = 3,   title = NULL,   x_title = NULL,   y_title = NULL )"},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_rolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Plot with Rolling Summaries — cartesian_rolling","text":"ds_linear data.frame containing data. x_name variable name containing date. y_name variable name containing dependent/criterion variable. stage_id_name variable name indicating stage record belongs . example, first interruption, stage_id \"1\", \"2\" afterwards. rolling_lower_name variable name showing lower bound rolling estimate. rolling_center_name variable name showing rolling estimate. rolling_upper_name variable name showing upper bound rolling estimate. palette_dark vector colors used dark/heavy graphical elements. vector one color stage_id value. vector specified, default chosen, based number stages. palette_light vector colors used light graphical elements. vector one color stage_id value. vector specified, default chosen, based number stages. color_sparse color 'slowest' trend line, plots one value per cycle. change_points vector values indicate interruptions stages. typically works best Date POSIXct class. change_point_labels text plotted interruption. draw_jagged_line boolean value indicating line plotted connects observed data points. draw_rolling_line boolean value indicating line plotted connects rolling estimates specified rolling_center_name. draw_rolling_band boolean value indicating band plotted envelopes rolling estimates (whose values take rolling_lower_name rolling_upper_name. draw_sparse_line_and_points boolean value indicating sparse line points plotted. jagged_point_size size observed data points. jagged_line_size size line connecting observed data points. rolling_line_size size line connecting rolling estimates. sparse_point_size size sparse estimates. sparse_line_size size line connecting sparse estimates. band_alpha amount transparency rolling estimate band. change_line_alpha amount transparency marking interruption. change_line_size width line marking interruption. title string describing plot. x_title string describing x-axis. y_title string describing y-axis.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_rolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Plot with Rolling Summaries — cartesian_rolling","text":"Returns ggplot2 graphing object","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/cartesian_rolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Plot with Rolling Summaries — cartesian_rolling","text":"","code":"library(Wats) # Load the package change_month <- base::as.Date(\"1996-02-15\") ds_linear <-   Wats::county_month_birth_rate_2005_version |>   dplyr::filter(county_name == \"oklahoma\") |>   augment_year_data_with_month_resolution(date_name = \"date\")  h_spread     <- function(scores) { quantile(x = scores, probs = c(.25, .75)) }  portfolio <- annotate_data(   ds_linear,   dv_name         = \"birth_rate\",   center_function = median,   spread_function = h_spread )  cartesian_rolling(   portfolio$ds_linear,   x_name               = \"date\",   y_name               = \"birth_rate\",   stage_id_name        = \"stage_id\",   change_points        = change_month,   change_point_labels  = \"Bombing Effect\" )"},{"path":"https://ouhscbbmc.github.io/Wats/reference/county_month_birth_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — county_month_birth_rate","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — county_month_birth_rate","text":"Monthly Growth Fertility Rates (GFR) 12 urban counties Oklahoma January 1990 December 1999. GFR defined number births divided number females (ages 15-44), multiplied 1,000. two datasets package almost identical. 2014 version better suited substantive researchers areas fertility traumatic cultural events. 2005 version recreates 2005 article , therefore better suited graphical aims 2014 manuscript. difference 2005 version uses constant estimate county population --specifically US Census 1990 estimates.  2014 version uses different estimates month --specifically US intercensal annual estimates, linear interpolation February December year.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/county_month_birth_rate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — county_month_birth_rate","text":"data frame 1,440 observations following 11 variables. fips county's 5-digit value according Federal Information Processing Standards.  integer county_name lower case name county. character year year record, ranging 1990 1999. integer month month record, ranging 1 12. integer fecund_population number females county, ages 15 44. numeric birth_count number births county given month. integer date year month record, date 15th. Centering date within month makes value little representative graphs little easier. date days_in_month number days specific month. integer days_in_year number days specific years integer stage_id \"Stage\" month.  pre-bombing records \"1\" (accounting 9 months gestation); post-bombing months \"2\". integer birth_rate Growth Fertility Rate (GFR). numeric","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/county_month_birth_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — county_month_birth_rate","text":"<<Joe, can please finish/edit sentence?>> monthly birth counts copied county records Ronnie Coleman summer 2001 state vital statistics records.  collected Rodgers, St. John, & Coleman (2005). US Census' intercensal estimates used January values fecund_population.  Values February-December interpolated using approx(). datasets manipulated produce data frame two R files isolate-census-pops--gfr.R calculate-gfr.R.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/county_month_birth_rate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — county_month_birth_rate","text":"Rodgers, J. L., St. John, C. . & Coleman R. (2005). Fertility Go Oklahoma City Bombing? Analysis Births Metropolitan Counties Oklahoma, 1990-1999. Demography, 42, 675-692. Intercensal estimates 199x Intercensal estimates 200x Documentation: US Census Intercensal Estimates 199x 200x.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/county_month_birth_rate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — county_month_birth_rate","text":"Beasley","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/county_month_birth_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — county_month_birth_rate","text":"","code":"library(ggplot2)  # 2005 Version (see description above) ds2005 <- county_month_birth_rate_2005_version ggplot(ds2005, aes(x = date, y = birth_rate, color = factor(fips))) +   geom_line() +   labs(title=\"County Fertility - Longitudinal\")   ggplot(ds2005, aes(x = birth_rate, color = factor(fips))) +   geom_density() +   labs(title=\"Distributions of County Fertility\")   # \\donttest{ # 2014 Version (see description above) ds2014 <- county_month_birth_rate_2014_version ggplot(ds2014, aes(x = date, y = birth_rate, color = factor(fips))) +   geom_line() +   labs(title=\"County Fertility - Longitudinal\")   ggplot(ds2014, aes(x = birth_rate, color = factor(fips))) +   geom_density() +   labs(title=\"Distributions of County Fertility\")  # }"},{"path":"https://ouhscbbmc.github.io/Wats/reference/polar_periodic.html","id":null,"dir":"Reference","previous_headings":"","what":"Polar Plot with Periodic Elements — polar_periodic","title":"Polar Plot with Periodic Elements — polar_periodic","text":"Shows interrupted time series Cartesian coordinates periodic/cyclic components.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/polar_periodic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polar Plot with Periodic Elements — polar_periodic","text":"","code":"polar_periodic(   ds_linear,   ds_stage_cycle_polar,   x_name,   y_name,   stage_id_name,   periodic_lower_name = \"position_lower\",   periodic_upper_name = \"position_upper\",   palette_dark = NULL,   palette_light = NULL,   change_points = NULL,   change_point_labels = NULL,   draw_observed_line = TRUE,   draw_periodic_band = TRUE,   draw_stage_labels = FALSE,   draw_radius_labels = FALSE,   jagged_point_size = 2,   jagged_line_size = 1,   band_alpha_dark = 0.4,   band_alpha_light = 0.15,   color_labels = \"gray50\",   color_gridlines = \"gray80\",   label_color = \"orange3\",   change_line_alpha = 0.5,   change_line_size = 3,   tick_locations = base::pretty(x = ds_linear[[y_name]]),   graph_floor = min(tick_locations),   graph_ceiling = max(tick_locations),   cardinal_labels = NULL,   origin_label = paste0(\"The origin represents \", graph_floor,     \";\\nthe perimeter represents \", graph_ceiling, \".\"),   plot_margins = c(3.5, 2, 0.5, 2) )"},{"path":"https://ouhscbbmc.github.io/Wats/reference/polar_periodic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polar Plot with Periodic Elements — polar_periodic","text":"ds_linear data.frame containing simple linear data.  one record per observation. ds_stage_cycle_polar data.frame containing bands single period. one record per theta per stage.  three stages, data.frame three times many rows ds_linear. x_name variable name containing date. y_name variable name containing dependent/criterion variable. stage_id_name variable name indicating stage record belongs . example, first interruption, stage_id \"1\", \"2\" afterwards. periodic_lower_name variable name showing lower bound stage's periodic estimate. periodic_upper_name variable name showing upper bound stage's periodic estimate. palette_dark vector colors used dark/heavy graphical elements. vector one color stage_id value. vector specified, default chosen, based number stages. palette_light vector colors used light graphical elements. vector one color stage_id value. vector specified, default chosen, based number stages. change_points vector values indicate interruptions stages. typically works best Date POSIXct class. change_point_labels text plotted interruption. draw_observed_line boolean value indicating longitudinal observed line plotted (whose values take ds_linear). draw_periodic_band boolean value indicating bands plotted (whose values take periodic_lower_name periodic_upper_name fields). draw_stage_labels boolean value indicating stage labels plotted (whose values take ds_linear). draw_radius_labels boolean value indicating gridline/radius labels plotted (whose values take tick_locations). jagged_point_size size observed data points. jagged_line_size size line connecting observed data points. band_alpha_dark amount transparency band appropriate stage's x values. band_alpha_light amount transparency band comparison stages given x value. color_labels color cardinal_labels origin_label. color_gridlines color gridlines. label_color color text labels imposed line. change_line_alpha amount transparency marking interruption. change_line_size width line marking interruption. tick_locations desired locations ticks showing value criterion/dependent variable. graph_floor value criterion/dependent variable center polar plot. graph_ceiling value criterion/dependent variable outside polar plot. cardinal_labels four labels placed  \"North\", \"East\", \"South\", \"West\" typically . origin_label Explains criterion variable's value origin. Use NULL explanation desired. plot_margins vector four numeric values, specifying number lines bottom, left, top right margins.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/polar_periodic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polar Plot with Periodic Elements — polar_periodic","text":"Returns grid graphical object (.e., grid::grob().)","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/polar_periodic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polar Plot with Periodic Elements — polar_periodic","text":"","code":"requireNamespace(\"grid\") library(Wats) ds_linear <-   Wats::county_month_birth_rate_2005_version |>   dplyr::filter(county_name == \"oklahoma\") |>   augment_year_data_with_month_resolution(date_name = \"date\")  h_spread <- function(scores) { quantile(x = scores, probs = c(.25, .75)) } portfolio <- annotate_data(   ds_linear       = ds_linear,   dv_name         = \"birth_rate\",   center_function = median,   spread_function = h_spread ) rm(ds_linear)  polarized <- polarize_cartesian(   portfolio$ds_linear,   portfolio$ds_stage_cycle,   y_name        = \"birth_rate\",   stage_id_name = \"stage_id\" )  grid::grid.newpage() polar_periodic(   ds_linear             = polarized$ds_observed_polar,   ds_stage_cycle_polar  = polarized$ds_stage_cycle_polar,   y_name                = \"radius\",   stage_id_name         = \"stage_id\",   cardinal_labels       = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\") )   grid::grid.newpage() polar_periodic(   ds_linear              = polarized$ds_observed_polar,   ds_stage_cycle_polar   = polarized$ds_stage_cycle_polar,   y_name                 = \"radius\",   stage_id_name          = \"stage_id\",   draw_periodic_band     = FALSE )   grid::grid.newpage() polar_periodic(   ds_linear            = polarized$ds_observed_polar,   ds_stage_cycle_polar = polarized$ds_stage_cycle_polar,   y_name               = \"radius\",   stage_id_name        = \"stage_id\",   draw_observed_line   = FALSE,   cardinal_labels      = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\") )"},{"path":"https://ouhscbbmc.github.io/Wats/reference/polarize_cartesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulate Cartesian data to use in the WATS polar plot — polarize_cartesian","title":"Manipulate Cartesian data to use in the WATS polar plot — polarize_cartesian","text":"Three operations performed. First, within stage, first row repeated end, close loop. Second, multiple points interpolated (still Cartesian coordinates) polar graph sharp edges. sharp edges artifacts conversion, reflect observed data. Third, Cartesian points converted polar coordinates.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/polarize_cartesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manipulate Cartesian data to use in the WATS polar plot — polarize_cartesian","text":"","code":"polarize_cartesian(   ds_linear,   ds_stage_cycle,   y_name,   stage_id_name,   cycle_tally_name = \"cycle_tally\",   proportion_through_cycle_name = \"proportion_through_cycle\",   periodic_lower_name = \"position_lower\",   periodic_center_name = \"position_center\",   periodic_upper_name = \"position_upper\",   plotted_point_count_per_cycle = 120,   graph_floor = min(base::pretty(ds_linear[[y_name]])) )"},{"path":"https://ouhscbbmc.github.io/Wats/reference/polarize_cartesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulate Cartesian data to use in the WATS polar plot — polarize_cartesian","text":"ds_linear data.frame containing simple linear data. one record per observation. ds_stage_cycle data.frame containing reoccurring/periodic bands. one record per observation per stage. three stages, tibble::tibble three times many rows ds_linear. y_name variable name containing dependent/criterion variable. stage_id_name variable name indicating stage record belongs . example, first interruption, stage_id \"1\", \"2\" afterwards. cycle_tally_name variable name indicating many complete cycles occurred observation. proportion_through_cycle_name variable name showing far cycle observation (summarized observations) occurred. periodic_lower_name variable name showing lower bound stage's periodic estimate. periodic_center_name variable name showing center estimate stage's periodic estimate. periodic_upper_name variable name showing upper bound stage's periodic estimate. plotted_point_count_per_cycle number points plotted per cycle. polar graph 'sharp corners', increase value. graph_floor value criterion/dependent variable center polar plot.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/polarize_cartesian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manipulate Cartesian data to use in the WATS polar plot — polarize_cartesian","text":"Returns tibble::tibble.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/reference/polarize_cartesian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulate Cartesian data to use in the WATS polar plot — polarize_cartesian","text":"","code":"library(Wats) ds_linear <-   Wats::county_month_birth_rate_2005_version |>   dplyr::filter(county_name == \"oklahoma\") |>   augment_year_data_with_month_resolution(date_name = \"date\")  h_spread <- function(scores) { quantile(x = scores, probs = c(.25, .75)) } portfolio <- annotate_data(   ds_linear        = ds_linear,   dv_name          = \"birth_rate\",   center_function  = median,   spread_function  = h_spread ) rm(ds_linear)  polarized <- polarize_cartesian(   ds_linear      = portfolio$ds_linear,   ds_stage_cycle = portfolio$ds_stage_cycle,   y_name         = \"birth_rate\",   stage_id_name  = \"stage_id\" )  library(ggplot2) polarized$ds_stage_cycle_polar |>   ggplot(aes(color = factor(stage_id))) +   geom_path(aes(x = polar_lower_x , y = polar_lower_y), linetype = 2) +   geom_path(aes(x = polar_center_x, y = polar_center_y), linewidth = 2) +   geom_path(aes(x = polar_upper_x , y = polar_upper_y), linetype = 2) +   geom_path(aes(x = observed_x    , y = observed_y), data = polarized$ds_observed_polar) +   coord_fixed(ratio = 1) +   guides(color = NULL)"},{"path":"https://ouhscbbmc.github.io/Wats/news/index.html","id":"version-101-released-2023-03-10","dir":"Changelog","previous_headings":"","what":"Version 1.0.1 (Released 2023-03-10)","title":"Version 1.0.1 (Released 2023-03-10)","text":"CRAN release: 2023-03-10 modernization package. See Issue #9 low-level details Breaking Changes: snake_case functions & variable names (#16) data manipulation functions accept & return tibbles instead data.frames (#24) New Features: pkgdown website documentation (#9) Transition GitHub Actions, Travis & AppVeyor (#9)","code":""},{"path":"https://ouhscbbmc.github.io/Wats/news/index.html","id":"version-0103-developed-2015-11-10","dir":"Changelog","previous_headings":"","what":"Version 0.10.3 (Developed 2015-11-10)","title":"Version 0.10.3 (Developed 2015-11-10)","text":"CRAN release: 2015-11-11 Changes: * submission fixes small incompatibility upcoming version ggplot2. ggplot2’s stringent checking caught mistake; calling ggplot2::geom_vline, Wats used parameter x, instead correct xintercept.","code":""},{"path":"https://ouhscbbmc.github.io/Wats/news/index.html","id":"version-02-developed-from-2013-12-30-through-2014-05-24","dir":"Changelog","previous_headings":"","what":"Version 0.2 (Developed from 2013-12-30 through 2014-05-24)","title":"Version 0.2 (Developed from 2013-12-30 through 2014-05-24)","text":"New Features: * Vignette showing reanalysis 2014 version data. Changes: * Additional documentation explanation * Finalized resubmission Multivariate Behavioral Research * Tweaked default cosmetic properties components * Adding Reproduce file * Modified relocated package dependencies * Changed GPL-2 MIT license * Upgraded Roxygen 4.0.0 * Upgraded ggplot2 1.0.0 Bug Fixes * annotate_data() properly accepts center_function parameter, doesn’t revert median. Thanks Mark Joseph Lachowicz (mark.j.lachowicz@vanderbilt.edu). GitHub Issue #2. * Removed unnecessary aes setting y cartesian_periodic.R","code":""},{"path":"https://ouhscbbmc.github.io/Wats/news/index.html","id":"version-01-developed-from-2010-through-2013-12-11","dir":"Changelog","previous_headings":"","what":"Version 0.1 (Developed from 2010 through 2013-12-11)","title":"Version 0.1 (Developed from 2010 through 2013-12-11)","text":"New Features: * AugmentZZZ() annotate_data() functions. * cartesian_rolling(), cartesian_periodic(), polar_periodic() functions. * Vignette reproduce figures MBR manuscript.","code":""}]
