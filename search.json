[{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"figures-for-the-mbr-manuscript","dir":"Articles","previous_headings":"","what":"Figures for the MBR Manuscript","title":"Figures for the MBR Manuscript","text":"vignette produces graphs included initial MBR manuscript.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"figure-1-cartesian-rolling---2005-version","dir":"Articles","previous_headings":"Figures for the MBR Manuscript","what":"Figure 1: Cartesian Rolling - 2005 Version","title":"Figures for the MBR Manuscript","text":"Figure 1: Raw monthly birth rates (General Fertility Rates; GFR’s) Oklahoma County, 1990-1999, plotted linear plot; “bombing effect” located ten months Oklahoma City bombing.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"figure-2-cartesian-rolling---2014-version","dir":"Articles","previous_headings":"Figures for the MBR Manuscript","what":"Figure 2: Cartesian Rolling - 2014 Version","title":"Figures for the MBR Manuscript","text":"Smoothed monthly birth rates (General Fertility Rates; GFRs) Oklahoma County, 1990-1999, plotted linear plot. top plot shows connected raw data February smoother; middle plot shows smoothing 12-month moving average, blue/green line, superimposed February smoother, red line); bottom plot shows smoothers confidence bands, H-spreads defined using distribution GFR’s given month 11 previous months. First, R packages loaded, variables functions defined.","code":"changeMonth <- base::as.Date(\"1996-02-15\") #as.Date(\"1995-04-19\") + lubridate::weeks(39) = \"1996-01-17\"  vpLayout <- function(x, y) { grid::viewport(layout.pos.row=x, layout.pos.col=y) }  fullSpread <- function( scores ) {   return( base::range(scores) ) #A new function isn't necessary.  It's defined in order to be consistent. } hSpread <- function( scores ) {   return( stats::quantile(x=scores, probs=c(.25, .75)) ) } seSpread <- function( scores ) {   return( base::mean(scores) + base::c(-1, 1) * stats::sd(scores) / base::sqrt(base::sum(!base::is.na(scores))) ) } bootSpread <- function( scores, conf=.68 ) {   plugin <- function( d, i ) { base::mean(d[i]) }    distribution <- boot::boot(data=scores, plugin, R=99) #999 for the publication   ci <- boot::boot.ci(distribution, type = c(\"bca\"), conf=conf)   return( ci$bca[4:5] ) #The fourth & fifth elements correspond to the lower & upper bound. }  darkTheme <- ggplot2::theme(   axis.title          = ggplot2::element_text(color=\"gray30\", size=9),   # axis.text.x         = ggplot2::element_text(color=\"gray30\", margin   = grid::unit(.00001, \"cm\"), hjust=0),   # axis.text.y         = ggplot2::element_text(color=\"gray30\", margin   = grid::unit(.00001, \"cm\")),   axis.text.x         = ggplot2::element_text(color=\"gray30\", hjust=0), axis.text.y         = ggplot2::element_text(color=\"gray30\"),   axis.ticks.length   = grid::unit(0, \"cm\"), #   panel.grid.minor.y  = element_line(color=\"gray95\", size=.1), #   panel.grid.major    = element_line(color=\"gray90\", size=.1),   panel.spacing       = grid::unit(c(0, 0, 0, 0), \"cm\"),   plot.margin         = grid::unit(c(0, 0, 0, 0), \"cm\") ) # qplot(mtcars$hp) + darkTheme  lightTheme <- darkTheme + ggplot2::theme(   axis.title          = ggplot2::element_text(color=\"gray80\", size=9),   axis.text.x         = ggplot2::element_text(color=\"gray80\", hjust=0),   axis.text.y         = ggplot2::element_text(color=\"gray80\"),   panel.grid.minor.y  = ggplot2::element_line(color=\"gray99\", size=.1),   panel.grid.major    = ggplot2::element_line(color=\"gray95\", size=.1) ) Warning:  [1m [22mThe `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.  [36mℹ [39m Please use the `linewidth` argument instead. dateSequence <- base::seq.Date(from=base::as.Date(\"1990-01-01\"), to=base::as.Date(\"1999-01-01\"), by=\"years\") xScale       <- ggplot2::scale_x_date(breaks=dateSequence, labels=scales::date_format(\"%Y\")) xScaleBlank  <- ggplot2::scale_x_date(breaks=dateSequence, labels=NULL) #This keeps things proportional down the three frames."},{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"individual-components","dir":"Articles","previous_headings":"Figures for the MBR Manuscript > Figure 2: Cartesian Rolling - 2014 Version","what":"Individual Components","title":"Figures for the MBR Manuscript","text":"basic linear rolling graph. doesn’t require much specification, work wide range approriate datasets. first (unpublished) graph displays components.  version manuscript tweaked take advantage certain features dataset. looks like three stylized panels combined.","code":"# dsLinearAll <- utils::read.csv(\"./Datasets/CountyMonthBirthRate2005Version.csv\", stringsAsFactors=FALSE) # dsLinearAll$Date <- base::as.Date(dsLinearAll$Date) # dsLinearOkc <- dsLinearAll[dsLinearAll$CountyName==\"oklahoma\", ]  # Uncomment the next two lines to use the version built into the package.  By default, it uses the # CSV to promote reproducible research, since the CSV format is more open and accessible to more software. dsLinearAll <- CountyMonthBirthRate2005Version dsLinearOkc <- dsLinearAll[dsLinearAll$CountyName==\"oklahoma\", ]  dsLinearOkc <- Wats::AugmentYearDataWithMonthResolution(dsLinear=dsLinearOkc, dateName=\"Date\")  portfolioCartesian <- Wats::AnnotateData(dsLinearOkc, dvName=\"BirthRate\", centerFunction=stats::median, spreadFunction=hSpread)  Wats::CartesianRolling(   dsLinear = portfolioCartesian$dsLinear,   xName = \"Date\",   yName = \"BirthRate\",   stageIDName = \"StageID\",   changePoints = changeMonth,   changePointLabels = \"Bombing Effect\" ) topPanel <- Wats::CartesianRolling(   dsLinear = portfolioCartesian$dsLinear,   xName = \"Date\",   yName = \"BirthRate\",   stageIDName = \"StageID\",   changePoints = changeMonth,   yTitle = \"General Fertility Rate\",   changePointLabels = \"Bombing Effect\",   drawRollingBand = FALSE,   drawRollingLine = FALSE )  middlePanel <- Wats::CartesianRolling(   dsLinear = portfolioCartesian$dsLinear,   xName = \"Date\",   yName = \"BirthRate\",   stageIDName = \"StageID\",   changePoints = changeMonth,   yTitle = \"General Fertility Rate\",   changePointLabels = \"\",   drawRollingBand = FALSE,   drawJaggedLine = FALSE )  bottomPanel <- Wats::CartesianRolling(   dsLinear = portfolioCartesian$dsLinear,   xName = \"Date\",   yName = \"BirthRate\",   stageIDName = \"StageID\",   changePoints = changeMonth,   yTitle = \"General Fertility Rate\",   changePointLabels = \"\", #   drawRollingBand = FALSE,   drawJaggedLine = FALSE )  topPanel <- topPanel + xScale + darkTheme middlePanel <- middlePanel + xScale + darkTheme bottomPanel <- bottomPanel + xScaleBlank + darkTheme  grid::grid.newpage() grid::pushViewport(grid::viewport(layout=grid::grid.layout(3,1))) print(topPanel, vp=vpLayout(1, 1)) print(middlePanel, vp=vpLayout(2, 1)) print(bottomPanel, vp=vpLayout(3, 1)) grid::popViewport()"},{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"figure-4-carteisan-periodic","dir":"Articles","previous_headings":"Figures for the MBR Manuscript","what":"Figure 4: Carteisan Periodic","title":"Figures for the MBR Manuscript","text":"Carteisan plot GFR time series data Oklahoma County, H-spread Bands superimposed.","code":"cartesianPeriodic <- Wats::CartesianPeriodic(   portfolioCartesian$dsLinear,   portfolioCartesian$dsPeriodic,   xName = \"Date\",   yName = \"BirthRate\",   stageIDName = \"StageID\",   changePoints = changeMonth,   changePointLabels = \"Bombing Effect\",   yTitle = \"General Fertility Rate\",   drawPeriodicBand = TRUE #The only difference from the simple linear graph above ) print(cartesianPeriodic) cartesianPeriodic <- cartesianPeriodic + xScale + darkTheme print(cartesianPeriodic)"},{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"figure-5-polar-periodic","dir":"Articles","previous_headings":"Figures for the MBR Manuscript","what":"Figure 5: Polar Periodic","title":"Figures for the MBR Manuscript","text":"Wrap Around Time Series (WATS Plot) Oklahoma City GFR data, 1990-1999 ## Figure 6: WATS Cartesian Wrap Around Time Series (WATS Plot) Oklahoma City GFR data, 1990-1999","code":"portfolioPolar <- Wats::PolarizeCartesian(   dsLinear = portfolioCartesian$dsLinear,   dsStageCycle = portfolioCartesian$dsStageCycle,   yName = \"BirthRate\",   stageIDName = \"StageID\",   plottedPointCountPerCycle = 7200 )  grid::grid.newpage() Wats::PolarPeriodic(   dsLinear = portfolioPolar$dsObservedPolar,   dsStageCycle = portfolioPolar$dsStageCyclePolar,   yName = \"Radius\",   stageIDName = \"StageID\",   drawPeriodicBand = FALSE,   drawStageLabels = TRUE,   drawRadiusLabels = TRUE,   cardinalLabels = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\") ) portfolioPolar <- Wats::PolarizeCartesian(   dsLinear = portfolioCartesian$dsLinear,   dsStageCycle = portfolioCartesian$dsStageCycle,   yName = \"BirthRate\",   stageIDName = \"StageID\",   plottedPointCountPerCycle = 7200 )  grid::grid.newpage() grid::pushViewport(grid::viewport(   layout=grid::grid.layout(     nrow = 2, ncol = 2, respect = TRUE,     widths = unit(c(1, 1), c(\"null\", \"null\")),     heights = unit(c(1, .5), c(\"null\", \"null\"))   ),   gp = grid::gpar(cex=1, fill=NA) ))  ## Create top left panel grid::pushViewport(grid::viewport(layout.pos.col=1, layout.pos.row=1)) topLeftPanel <- Wats::PolarPeriodic(   dsLinear = portfolioPolar$dsObservedPolar,   dsStageCyclePolar = portfolioPolar$dsStageCyclePolar,   yName = \"Radius\",   stageIDName = \"StageID\", #graphCeiling=7,   cardinalLabels = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\") ) grid::upViewport()  ## Create top right panel grid::pushViewport(grid::viewport(layout.pos.col=2, layout.pos.row=1)) topRighttPanel <- Wats::PolarPeriodic(   dsLinear = portfolioPolar$dsObservedPolar,   dsStageCyclePolar = portfolioPolar$dsStageCyclePolar,   yName = \"Radius\",   stageIDName = \"StageID\", #graphCeiling=7,   drawObservedLine = FALSE,   cardinalLabels = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\"),   originLabel = NULL ) grid::upViewport()  ## Create bottom panel grid::pushViewport(grid::viewport(layout.pos.col=1:2, layout.pos.row=2, gp=grid::gpar(cex=1))) print(cartesianPeriodic, vp=vpLayout(x=1:2, y=2)) #Print across both columns of the bottom row. grid::upViewport()"},{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"figure-7-county-comparison","dir":"Articles","previous_headings":"Figures for the MBR Manuscript","what":"Figure 7: County Comparison","title":"Figures for the MBR Manuscript","text":"figure compares Oklahoma County () largest urban counties.  12 counties Ronnie colelcted birth records . extended graph mauscript.","code":"# dsLinearAll <- Wats::AugmentYearDataWithMonthResolution(dsLinear=CountyMonthBirthRate2005Version, dateName=\"Date\")  #Identify the average size of the fecund population plyr::ddply(dsLinearAll, \"CountyName\", plyr::summarize, Mean=base::mean(FecundPopulation)) CountyName       Mean 1      canadian  18332.596 2     cleveland  48865.271 3      comanche  26268.104 4         creek  13402.358 5         logan   7065.562 6       mcclain   5434.525 7      oklahoma 146882.529 8         osage   8529.625 9  pottawatomie  13604.321 10       rogers  13383.292 11        tulsa 123783.479 12      wagoner  11579.967 GraphRowComparison <- function( rowLabel=\"\", countyName=\"oklahoma\", spreadFunction=hSpread, changeMonth=as.Date(\"1996-02-15\") ) {   dsLinear <- dsLinearAll[dsLinearAll$CountyName==countyName, ]   dsLinear <- Wats::AugmentYearDataWithMonthResolution(dsLinear=dsLinear, dateName=\"Date\")   portfolioCartesian <- Wats::AnnotateData(dsLinear, dvName=\"BirthRate\", centerFunction=stats::median, spreadFunction=spreadFunction)   portfolioPolar <- Wats::PolarizeCartesian(dsLinear=portfolioCartesian$dsLinear, dsStageCycle=portfolioCartesian$dsStageCycle, yName=\"BirthRate\", stageIDName=\"StageID\", plottedPointCountPerCycle=7200)   cartesianPeriodic <- Wats::CartesianPeriodic(portfolioCartesian$dsLinear, portfolioCartesian$dsPeriodic, xName=\"Date\", yName=\"BirthRate\", stageIDName=\"StageID\", changePoints=changeMonth, changePointLabels=\"\"  )    grid::pushViewport(grid::viewport(     layout=grid::grid.layout(nrow=1, ncol=3, respect=F, widths=grid::unit(c(1.5,1,3), c(\"line\", \"null\", \"null\"))),     gp=grid::gpar(cex=1, fill=NA)   ))   grid::pushViewport(grid::viewport(layout.pos.col=1))   grid.rect(gp=gpar(fill=\"gray90\", col=NA))   grid.text(rowLabel, rot=90)   grid::popViewport()    grid::pushViewport(grid::viewport(layout.pos.col=2))   polarPeriodic <- Wats::PolarPeriodic(dsLinear=portfolioPolar$dsObservedPolar, dsStageCyclePolar=portfolioPolar$dsStageCyclePolar, drawObservedLine=FALSE, yName=\"Radius\", stageIDName=\"StageID\", originLabel=NULL, plotMargins=c(0,0,0,0))   grid::popViewport()    grid::pushViewport(grid::viewport(layout.pos.col=3))   print(cartesianPeriodic + xScale + lightTheme, vp=vpLayout(x=1, y=1))   grid::popViewport()   grid::popViewport() #Finish the row }  counties <- c(\"comanche\", \"cleveland\", \"oklahoma\", \"tulsa\", \"rogers\") countyNames <- c(\"Comanche\", \"Cleveland\", \"Oklahoma\", \"Tulsa\", \"Rogers\")  grid.newpage() grid::pushViewport(grid::viewport(layout=grid.layout(nrow=length(counties), ncol=1), gp=grid::gpar(cex=1, fill=NA))) for( i in base::seq_along(counties) ) {   grid::pushViewport(grid::viewport(layout.pos.row=i))   GraphRowComparison(countyName=counties[i], rowLabel=countyNames[i])   grid::popViewport() } grid::popViewport() counties <- base::sort(base::unique(dsLinearAll$CountyName)) countyNames <- c(\"Canadian\", \"Cleveland\", \"Comanche\", \"Creek\", \"Logan\", \"McClain\", \"Oklahoma\", \"Osage\", \"Pottawatomie\", \"Rogers\", \"Tulsa\", \"Wagoner\")  grid::grid.newpage() grid::pushViewport(grid::viewport(layout=grid.layout(nrow=base::length(counties), ncol=1), gp=grid::gpar(cex=1, fill=NA))) for( i in base::seq_along(counties) ) {   grid::pushViewport(grid::viewport(layout.pos.row=i))   GraphRowComparison(countyName=counties[i], rowLabel=countyNames[i])   grid::popViewport() } grid::popViewport()"},{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"figure-8-error-band-comparison","dir":"Articles","previous_headings":"Figures for the MBR Manuscript","what":"Figure 8: Error Band Comparison","title":"Figures for the MBR Manuscript","text":"figure demonstrates WATS accommodates many types error bands.","code":"spreads <- c(\"hSpread\", \"fullSpread\", \"seSpread\", \"bootSpread\") spreadNames <- c(\"H-Spread\", \"Range\", \"+/-1 SE\", \"Bootstrap\") grid::grid.newpage() grid::pushViewport(grid::viewport(layout=grid::grid.layout(nrow=base::length(spreads), ncol=1), gp=grid::gpar(cex=1, fill=NA))) for( i in base::seq_along(spreads) ) {   grid::pushViewport(grid::viewport(layout.pos.row=i))   GraphRowComparison(spreadFunction=base::get(spreads[i]), rowLabel=spreadNames[i])   grid::upViewport() } grid::upViewport()"},{"path":"http://ouhscbbmc.github.io/Wats/articles/MbrFigures.html","id":"session-info","dir":"Articles","previous_headings":"Figures for the MBR Manuscript","what":"Session Info","title":"Figures for the MBR Manuscript","text":"current vignette build system using following software.","code":"Report created by runner at Sat Feb 25 01:08:24 2023, +0000 R version 4.2.2 (2022-10-31) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 22.04.2 LTS  Matrix products: default BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so  locale:  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8     [6] LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           LC_TELEPHONE=C         [11] LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C     attached base packages: [1] grid      stats     graphics  grDevices utils     datasets  methods   base       other attached packages: [1] Wats_0.11.1.9000 boot_1.3-28      ggplot2_3.4.1    scales_1.2.1     plyr_1.8.8        loaded via a namespace (and not attached):  [1] Rcpp_1.0.10        highr_0.10         RColorBrewer_1.1-3 bslib_0.4.2        compiler_4.2.2     pillar_1.8.1        [7] jquerylib_0.1.4    tools_4.2.2        digest_0.6.31      lattice_0.20-45    timechange_0.2.0   lubridate_1.9.2    [13] jsonlite_1.8.4     evaluate_0.20      memoise_2.0.1      lifecycle_1.0.3    tibble_3.1.8       gtable_0.3.1       [19] pkgconfig_2.0.3    rlang_1.0.6        cli_3.6.0          yaml_2.3.7         pkgdown_2.0.7      xfun_0.37          [25] fastmap_1.1.0      withr_2.5.0        stringr_1.5.0      knitr_1.42         generics_0.1.3     desc_1.4.2         [31] fs_1.6.1           vctrs_0.5.2        sass_0.4.5         systemfonts_1.0.4  rprojroot_2.0.3    glue_1.6.2         [37] R6_2.5.1           textshaping_0.3.6  fansi_1.0.4        rmarkdown_2.20     farver_2.1.1       purrr_1.0.1        [43] magrittr_2.0.3     htmltools_0.5.4    testit_0.13        colorspace_2.1-0   labeling_0.4.2     ragg_1.2.5         [49] utf8_1.2.3         stringi_1.7.12     munsell_0.5.0      cachem_1.0.7       zoo_1.8-11"},{"path":"http://ouhscbbmc.github.io/Wats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Beasley. Author, maintainer. Joe Rodgers. Author. Matthew Schuelke. Contributor. Ronnie Coleman. Contributor. Mark Joseph Lachowicz. Contributor.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Joseph Lee Rodgers, William Howard Beasley, Matthew Schuelke. Graphical Data Analysis Circle:  Wrap-around Time Series Plots (Interrupted) Time Series Designs.","code":"@Article{,   author = {Joseph Lee Rodgers and William Howard Beasley and Matthew Schuelke},   title = {Graphical Data Analysis on the Circle:  Wrap-around Time Series Plots for (Interrupted) Time Series Designs},   journal = {Multivariate Behavioral Research},   year = {2014},   volume = {49},   number = {6},   pages = {571--580},   publisher = {Taylor and Francis},   doi = {10.1080/00273171.2014.946589},   url = {https://github.com/OuhscBbmc/Wats}, }"},{"path":"http://ouhscbbmc.github.io/Wats/index.html","id":"wats","dir":"","previous_headings":"","what":"Wrap Around Time Series Graphics","title":"Wrap Around Time Series Graphics","text":"Welcome Wats Package. implements approaches described Joseph Lee Rodgers, William Howard Beasley, Matthew Schuelke (2014). Wrap-around Time Series Plots (WATS Plots) Interrupted Time Series Designs: Applications Fertility Rates Oklahoma City Bombing. Multivariate Behavioral Research. figures can viewed vignettes, Handouts document. release version Wats available CRAN.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/index.html","id":"article-abstract","dir":"","previous_headings":"","what":"Article Abstract","title":"Wrap Around Time Series Graphics","text":"Many data structures, particular time series data, naturally seasonal, cyclical, otherwise circular. Past graphical methods time series focused linear plots. paper, move graphical analysis onto circle. focus two methods, one old one new. Rose diagrams circular histograms, can produced several different forms using RRose software system. addition, propose, develop, illustrate new circular graphical method, called Wrap-Around Time Series Plots (WATS plots) useful support time series analyses general, particular relation interrupted time series designs. illustrate use WATS Plots interrupted time series design evaluating effect Oklahoma City bombing birth rates Oklahoma County ten years surrounding bombing Murrah Building Oklahoma City. compare WATS Plots linear time series representations smoothing. method shown advantages relation ; example, WATS Plots clearly show existence effect size fertility differential. Keywords: time series, interrupted time series design, group differences, graphical analysis, circular data, H-spread","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"http://ouhscbbmc.github.io/Wats/index.html","id":"reproducible-research","dir":"","previous_headings":"","what":"Reproducible Research","title":"Wrap Around Time Series Graphics","text":"Wats package installed local machine, Reproduce.R script starts initial datasets (ie, vital statistics birth counts US Census population estimates) create derivative datasets resulting graphs analysis.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/index.html","id":"nonstandard-directories","dir":"","previous_headings":"","what":"Nonstandard Directories","title":"Wrap Around Time Series Graphics","text":"following directories part standard R package: Datasets: CSV versions *.rda data.frames officially included package. DocumentationForDevelopers: Notes links help package developers set computer. Typical package users won’t need . PublicationGraphs: deprecated location contains loose graphs older versions manuscript. Playgrounds: R snippets help developers experiment potential new features. UtilityScripts: R scripts aren’t incorpated package. help automate certain tasks, document parts package created.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Wrap Around Time Series Graphics","text":"released CRAN version Wats can installed R . latest development version Wats can installed GitHub installing devtools package.","code":"install.packages(\"Wats\") install.packages(\"devtools\") devtools::install_github(repo=\"OuhscBbmc/Wats\")"},{"path":"http://ouhscbbmc.github.io/Wats/index.html","id":"code-repository","dir":"","previous_headings":"","what":"Code Repository","title":"Wrap Around Time Series Graphics","text":"software written primarily R, MIT License. DOI major release repository 10.5281/zenodo.11921. (DOI article 10.1080/00273171.2014.946589.)","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/AnnotateData.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds midpoints and bands for the within and between cycles. — AnnotateData","title":"Finds midpoints and bands for the within and between cycles. — AnnotateData","text":"Finds midpoints bands within cycles.  second two functions needs called produce WATS Plots.  AugmentZZZ first.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/AnnotateData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds midpoints and bands for the within and between cycles. — AnnotateData","text":"","code":"AnnotateData(   dsLinear,   dvName,   centerFunction,   spreadFunction,   cycleTallyName = \"CycleTally\",   stageIDName = \"StageID\",   stageProgressName = \"StageProgress\",   proportionThroughCycleName = \"ProportionThroughCycle\",   proportionIDName = \"ProportionID\",   terminalPointInCycleName = \"TerminalPointInCycle\" )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/AnnotateData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds midpoints and bands for the within and between cycles. — AnnotateData","text":"dsLinear data.frame containing detailed data. dvName name dependent/criterion variable. centerFunction function calculate center subsample. spreadFunction function calculate bands subsample. cycleTallyName variable name indicating many cycles completed. stageIDName variable name indicating stage. typical interrupted time series, values 1 interruption 2 . stageProgressName variable name indicating stage decimal form.  mostly internal uses. proportionThroughCycleName variable name indicating far point cycle.  example, 0 degrees 0, 180 degrees 0.5, 359 degrees 0.9972, 360 degrees 0. proportionIDName variable name indicating ordinal position cycle. terminalPointInCycleName variable name indicating last point within given cycle.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/AnnotateData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds midpoints and bands for the within and between cycles. — AnnotateData","text":"Returns data.frame additional variables <<Say >>.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/AnnotateData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds midpoints and bands for the within and between cycles. — AnnotateData","text":"","code":"library(Wats) dsLinear <- CountyMonthBirthRate2005Version dsLinear <- dsLinear[dsLinear$CountyName==\"oklahoma\", ] dsLinear <- AugmentYearDataWithMonthResolution(dsLinear=dsLinear, dateName=\"Date\")  hSpread <- function( scores ) { return( quantile(x=scores, probs=c(.25, .75)) ) } portfolio <- AnnotateData(   dsLinear = dsLinear,   dvName = \"BirthRate\",   centerFunction = median,   spreadFunction = hSpread )  head(portfolio$dsStageCycle) #>   StageID ProportionID ProportionThroughCycle PositionLower PositionCenter #> 1       1            1             0.04166667      66.82005       70.13930 #> 2       1            2             0.12500000      68.93747       69.53782 #> 3       1            3             0.20833333      66.13076       69.70012 #> 4       1            4             0.29166667      67.71910       69.30147 #> 5       1            5             0.37500000      67.65719       68.58747 #> 6       1            6             0.45833333      70.88414       71.13025 #>   PositionUpper #> 1      70.55044 #> 2      71.72977 #> 3      69.91971 #> 4      71.56912 #> 5      70.55044 #> 6      72.88710 head(portfolio$dsLinear) #>      Fips CountyName Year Month FecundPopulation BirthCount       Date #> 721 40109   oklahoma 1990     1         143192.0        853 1990-01-15 #> 722 40109   oklahoma 1990     2         143278.7        758 1990-02-15 #> 723 40109   oklahoma 1990     3         143365.3        886 1990-03-15 #> 724 40109   oklahoma 1990     4         143452.0        871 1990-04-15 #> 725 40109   oklahoma 1990     5         143538.7        822 1990-05-15 #> 726 40109   oklahoma 1990     6         143625.3        834 1990-06-15 #>     DaysInMonth DaysInYear StageID BirthRateMonthly BirthRate CycleTally #> 721          31        365       1         5.957037  70.13930          0 #> 722          28        365       1         5.293592  69.00575          0 #> 723          31        365       1         6.187497  72.85278          0 #> 724          30        365       1         6.082742  74.00669          0 #> 725          31        365       1         5.740544  67.59028          0 #> 726          30        365       1         5.824348  70.86290          0 #>     ProportionThroughCycle ProportionID StartingPointInCycle #> 721             0.04166667            1                 TRUE #> 722             0.12500000            2                FALSE #> 723             0.20833333            3                FALSE #> 724             0.29166667            4                FALSE #> 725             0.37500000            5                FALSE #> 726             0.45833333            6                FALSE #>     TerminalPointInCycle StageProgress RollingLower RollingCenter RollingUpper #> 721                FALSE           1.0           NA            NA           NA #> 722                FALSE           1.5           NA            NA           NA #> 723                FALSE           1.5           NA            NA           NA #> 724                FALSE           1.5           NA            NA           NA #> 725                FALSE           1.5           NA            NA           NA #> 726                FALSE           1.5           NA            NA           NA head(portfolio$dsPeriodic) #>    ProportionID       Date StageIDTime StageProgress StageIDBand #> 1             1 1990-01-15           1           1.0           1 #> 2             1 1990-01-15           1           1.0           2 #> 21            2 1990-02-15           1           1.5           1 #> 22            2 1990-02-15           1           1.5           2 #> 43            3 1990-03-15           1           1.5           1 #> 44            3 1990-03-15           1           1.5           2 #>    ProportionThroughCycle PositionLower PositionCenter PositionUpper #> 1              0.04166667      66.82005       70.13930      70.55044 #> 2              0.04166667      70.75600       73.51059      73.59282 #> 21             0.12500000      68.93747       69.53782      71.72977 #> 22             0.12500000      69.34846       71.96444      74.14932 #> 43             0.20833333      66.13076       69.70012      69.91971 #> 44             0.20833333      70.70149       71.12602      72.54443"},{"path":"http://ouhscbbmc.github.io/Wats/reference/AugmentCycleData.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates variables necessary for WATS Plots — AugmentCycleData","title":"Calculates variables necessary for WATS Plots — AugmentCycleData","text":"Calculates variables necessary WATS Plots.  first two functions needs called produce WATS Plots.  AnnotateData second.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/AugmentCycleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates variables necessary for WATS Plots — AugmentCycleData","text":"","code":"AugmentYearDataWithMonthResolution( dsLinear, dateName ) AugmentYearDataWithSecondResolution( dsLinear, dateName )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/AugmentCycleData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates variables necessary for WATS Plots — AugmentCycleData","text":"dsLinear data.frame containing detailed data. dateName variable name dsLinear containing date datetime value.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/AugmentCycleData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates variables necessary for WATS Plots — AugmentCycleData","text":"Returns data.frame additional variables: CycleTally, ProportionThroughCycle, ProportionID, TerminalPointInCycle.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/AugmentCycleData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates variables necessary for WATS Plots — AugmentCycleData","text":"","code":"library(Wats) dsLinear <- CountyMonthBirthRate2005Version dsLinear <- dsLinear[dsLinear$CountyName==\"oklahoma\", ] dsLinear <- AugmentYearDataWithMonthResolution(dsLinear=dsLinear, dateName=\"Date\") head(dsLinear) #>      Fips CountyName Year Month FecundPopulation BirthCount       Date #> 721 40109   oklahoma 1990     1         143192.0        853 1990-01-15 #> 722 40109   oklahoma 1990     2         143278.7        758 1990-02-15 #> 723 40109   oklahoma 1990     3         143365.3        886 1990-03-15 #> 724 40109   oklahoma 1990     4         143452.0        871 1990-04-15 #> 725 40109   oklahoma 1990     5         143538.7        822 1990-05-15 #> 726 40109   oklahoma 1990     6         143625.3        834 1990-06-15 #>     DaysInMonth DaysInYear StageID BirthRateMonthly BirthRate CycleTally #> 721          31        365       1         5.957037  70.13930          0 #> 722          28        365       1         5.293592  69.00575          0 #> 723          31        365       1         6.187497  72.85278          0 #> 724          30        365       1         6.082742  74.00669          0 #> 725          31        365       1         5.740544  67.59028          0 #> 726          30        365       1         5.824348  70.86290          0 #>     ProportionThroughCycle ProportionID StartingPointInCycle #> 721             0.04166667            1                 TRUE #> 722             0.12500000            2                FALSE #> 723             0.20833333            3                FALSE #> 724             0.29166667            4                FALSE #> 725             0.37500000            5                FALSE #> 726             0.45833333            6                FALSE #>     TerminalPointInCycle StageProgress #> 721                FALSE           1.0 #> 722                FALSE           1.5 #> 723                FALSE           1.5 #> 724                FALSE           1.5 #> 725                FALSE           1.5 #> 726                FALSE           1.5"},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianPeriodic.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Plot with Periodic Elements — CartesianPeriodic","title":"Linear Plot with Periodic Elements — CartesianPeriodic","text":"Shows interrupted time series Cartesian coordinates periodic/cyclic components.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianPeriodic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Plot with Periodic Elements — CartesianPeriodic","text":"","code":"CartesianPeriodic(   dsLinear,   dsPeriodic,   xName,   yName,   stageIDName,   periodicLowerName = \"PositionLower\",   periodicUpperName = \"PositionUpper\",   paletteDark = NULL,   paletteLight = NULL,   changePoints = NULL,   changePointLabels = NULL,   drawPeriodicBand = TRUE,   jaggedPointSize = 2,   jaggedLineSize = 0.5,   bandAlphaDark = 0.4,   bandAlphaLight = 0.15,   changeLineAlpha = 0.5,   changeLineSize = 3,   title = NULL,   xTitle = NULL,   yTitle = NULL )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianPeriodic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Plot with Periodic Elements — CartesianPeriodic","text":"dsLinear data.frame containing simple linear data.  one record per observation. dsPeriodic data.frame containing reoccurring/periodic bands.  one record per observation per stage.  three stages, data.frame three times many rows dsLinear. xName variable name containing date. yName variable name containing dependent/criterion variable. stageIDName variable name indicating stage record belongs .  example, first interruption, StageID 1, 2 afterwards. periodicLowerName variable name showing lower bound stage's periodic estimate. periodicUpperName variable name showing upper bound stage's periodic estimate. paletteDark vector colors used dark/heavy graphical elements.  vector one color StageID value.  vector specified, default chosen, based number stages. paletteLight vector colors used light graphical elements.  vector one color StageID value.  vector specified, default chosen, based number stages. changePoints vector values indicate interruptions stages.  typically works best Date POSIXct class. changePointLabels text plotted interruption. drawPeriodicBand boolean value indicating bands plotted (whose values take periodicLowerName periodicUpperName. jaggedPointSize size observed data points. jaggedLineSize size line connecting observed data points. bandAlphaDark amount transparency band appropriate stage's x values. bandAlphaLight amount transparency band comparison stages given x value. changeLineAlpha amount transparency marking interruption. changeLineSize width line marking interruption. title string describing plot. xTitle string describing x-axis. yTitle string describing y-axis.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianPeriodic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Plot with Periodic Elements — CartesianPeriodic","text":"Returns ggplot2 graphing object","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianPeriodic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Plot with Periodic Elements — CartesianPeriodic","text":"","code":"library(Wats) #Load the package changeMonth <- base::as.Date(\"1996-02-15\") dsLinear <- CountyMonthBirthRate2005Version dsLinear <- dsLinear[dsLinear$CountyName==\"oklahoma\", ] dsLinear <- AugmentYearDataWithMonthResolution(dsLinear=dsLinear, dateName=\"Date\") hSpread <- function( scores ) { return( quantile(x=scores, probs=c(.25, .75)) ) } portfolio <- AnnotateData(     dsLinear,     dvName = \"BirthRate\",     centerFunction = median,     spreadFunction = hSpread )  CartesianPeriodic(   portfolio$dsLinear,   portfolio$dsPeriodic,   xName = \"Date\",   yName = \"BirthRate\",   stageIDName = \"StageID\",   changePoints = changeMonth,   changePointLabels = \"Bombing Effect\" )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianRolling.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Plot with Rolling Summaries — CartesianRolling","title":"Linear Plot with Rolling Summaries — CartesianRolling","text":"Shows interrupted time series Cartesian coordinates without periodic/cyclic components.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianRolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Plot with Rolling Summaries — CartesianRolling","text":"","code":"CartesianRolling(   dsLinear,   xName,   yName,   stageIDName,   rollingLowerName = \"RollingLower\",   rollingCenterName = \"RollingCenter\",   rollingUpperName = \"RollingUpper\",   paletteDark = NULL,   paletteLight = NULL,   colorSparse = grDevices::adjustcolor(\"tan1\", 0.5),   changePoints = NULL,   changePointLabels = NULL,   drawJaggedLine = TRUE,   drawRollingLine = TRUE,   drawRollingBand = TRUE,   drawSparseLineAndPoints = TRUE,   jaggedPointSize = 2,   jaggedLineSize = 0.5,   rollingLineSize = 1,   sparsePointSize = 4,   sparseLineSize = 0.5,   bandAlpha = 0.4,   changeLineAlpha = 0.5,   changeLineSize = 3,   title = NULL,   xTitle = NULL,   yTitle = NULL )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianRolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Plot with Rolling Summaries — CartesianRolling","text":"dsLinear data.frame containing data. xName variable name containing date. yName variable name containing dependent/criterion variable. stageIDName variable name indicating stage record belongs .  example, first interruption, StageID 1, 2 afterwards. rollingLowerName variable name showing lower bound rolling estimate. rollingCenterName variable name showing rolling estimate. rollingUpperName variable name showing upper bound rolling estimate. paletteDark vector colors used dark/heavy graphical elements.  vector one color StageID value.  vector specified, default chosen, based number stages. paletteLight vector colors used light graphical elements.  vector one color StageID value.  vector specified, default chosen, based number stages. colorSparse color `slowest' trend line, plots one value per cycle. changePoints vector values indicate interruptions stages.  typically works best Date POSIXct class. changePointLabels text plotted interruption. drawJaggedLine boolean value indicating line plotted connects observed data points. drawRollingLine boolean value indicating line plotted connects rolling estimates specified rollingCenterName. drawRollingBand boolean value indicating band plotted envelopes rolling estimates (whose values take rollingLowerName rollingUpperName. drawSparseLineAndPoints boolean value indicating sparse line points plotted. jaggedPointSize size observed data points. jaggedLineSize size line connecting observed data points. rollingLineSize size line connecting rolling estimates. sparsePointSize size sparse estimates. sparseLineSize size line connecting sparse estimates. bandAlpha amount transparency rolling estimate band. changeLineAlpha amount transparency marking interruption. changeLineSize width line marking interruption. title string describing plot. xTitle string describing x-axis. yTitle string describing y-axis.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianRolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Plot with Rolling Summaries — CartesianRolling","text":"Returns ggplot2 graphing object","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CartesianRolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Plot with Rolling Summaries — CartesianRolling","text":"","code":"library(Wats) #Load the package changeMonth <- base::as.Date(\"1996-02-15\") dsLinear <- CountyMonthBirthRate2005Version dsLinear <- dsLinear[dsLinear$CountyName==\"oklahoma\", ] dsLinear <- AugmentYearDataWithMonthResolution(dsLinear=dsLinear, dateName=\"Date\") hSpread <- function( scores ) { return( quantile(x=scores, probs=c(.25, .75)) ) } portfolio <- AnnotateData(     dsLinear,     dvName = \"BirthRate\",     centerFunction = median,     spreadFunction = hSpread )  CartesianRolling(     portfolio$dsLinear,     xName = \"Date\",     yName = \"BirthRate\",     stageIDName = \"StageID\",     changePoints = changeMonth,     changePointLabels = \"Bombing Effect\" )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/CountyMonthBirthRate.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — CountyMonthBirthRate","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — CountyMonthBirthRate","text":"Monthly Growth Fertility Rates (GFR) 12 urban counties Oklahoma January 1990 December 1999.  GFR defined number births divided number females (ages 15-44), multiplied 1,000. two datasets package almost identical.  2014 version better suited substantive researchers areas fertility traumatic cultural events.  2005 version recreates 2005 article , therefore better suited graphical aims 2014 manuscript. difference 2005 version uses constant estimate county population --specifically US Census 1990 estimates.  2014 version uses different estimates month --specificallly US intercensal annual estimates, linear interpolation February December year.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CountyMonthBirthRate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — CountyMonthBirthRate","text":"data frame 1,440 observations following 11 variables. Fips county's 5-digit value according Federal Information Processing Standards.  integer CountyName lower case name county. character Year year record, ranging 1990 1999. integer Month month record, ranging 1 12. integer FecundPopulation number females county, ages    15 44. numeric BirthCount number births county given month.    integer Date year month record, date 15th. Centering date within month makes value little representative graphs little easier. date DaysInMonth number days specific month. integer DaysInYear number days specific years integer StageID `Stage' month.  pre-bombing records `1' (accounting 9 months gestation); post-bombing months `2'. integer BirthRate Growth Fertility Rate (GFR). numeric","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CountyMonthBirthRate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — CountyMonthBirthRate","text":"<<Joe, can please finish/edit sentence?>> monthly birth counts copied county records Ronnie Coleman summer 2001 state vital statistics records.  collected Rodgers, St. John, & Coleman (2005). US Census' intercensal estimates used January values FecundPopluation.  Values February-December interpolated using approx. datasets manipulated produce data frame two R files IsolateCensusPopsForGfr.R CalculateGfr.R.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CountyMonthBirthRate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — CountyMonthBirthRate","text":"Rodgers, J. L., St. John, C. . & Coleman R. (2005). Fertility Go Oklahoma City Bombing?  Analysis Births Metropolitan Counties Oklahoma, 1990-1999. Demography, 42, 675-692. [Intercensal estimates 199x](https://www.census.gov/data/tables/time-series/demo/popest/intercensal-1990-2000-state--county-totals.html) [Intercensal estimates 200x](http://www.census.gov/popest/data/intercensal/county/county2010.html) * [US Census Intercensal Estimates](https://www.census.gov/programs-surveys/popest/technical-documentation/file-layouts.html)  [199x]()  [200x](https://www.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2000-2010-intercensal.html).","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CountyMonthBirthRate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — CountyMonthBirthRate","text":"Beasley","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/CountyMonthBirthRate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monthly Growth Fertility Rates (GFR) for 12 urban Oklahoma counties — CountyMonthBirthRate","text":"","code":"library(ggplot2)  ##2005 Version (see description above) ds2005 <- CountyMonthBirthRate2005Version ggplot(ds2005, aes(x=Date, y=BirthRate, color=factor(Fips))) + geom_line() + labs(title=\"County Fertility - Longitudinal\")   ggplot(ds2005, aes(x=BirthRate, color=factor(Fips))) + geom_density() + labs(title=\"Distributions of County Fertility\")   ##2014 Version (see description above) ds2014 <- CountyMonthBirthRate2014Version ggplot(ds2014, aes(x=Date, y=BirthRate, color=factor(Fips))) + geom_line() + labs(title=\"County Fertility - Longitudinal\")    ggplot(ds2014, aes(x=BirthRate, color=factor(Fips))) + geom_density() + labs(title=\"Distributions of County Fertility\")"},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarPeriodic.html","id":null,"dir":"Reference","previous_headings":"","what":"Polar Plot with Periodic Elements — PolarPeriodic","title":"Polar Plot with Periodic Elements — PolarPeriodic","text":"Shows interrupted time series Cartesian coordinates periodic/cyclic components.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarPeriodic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polar Plot with Periodic Elements — PolarPeriodic","text":"","code":"PolarPeriodic(   dsLinear,   dsStageCyclePolar,   xName,   yName,   stageIDName,   periodicLowerName = \"PositionLower\",   periodicUpperName = \"PositionUpper\",   paletteDark = NULL,   paletteLight = NULL,   changePoints = NULL,   changePointLabels = NULL,   drawObservedLine = TRUE,   drawPeriodicBand = TRUE,   drawStageLabels = FALSE,   drawRadiusLabels = FALSE,   jaggedPointSize = 2,   jaggedLineSize = 1,   bandAlphaDark = 0.4,   bandAlphaLight = 0.15,   colorLabels = \"gray50\",   colorGridlines = \"gray80\",   labelColor = \"orange3\",   changeLineAlpha = 0.5,   changeLineSize = 3,   tickLocations = base::pretty(x = dsLinear[, yName]),   graphFloor = min(tickLocations),   graphCeiling = max(tickLocations),   cardinalLabels = NULL,   originLabel = paste0(\"The origin represents \", graphFloor,     \";\\nthe perimeter represents \", graphCeiling, \".\"),   plotMargins = c(3.5, 2, 0.5, 2) )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarPeriodic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polar Plot with Periodic Elements — PolarPeriodic","text":"dsLinear data.frame containing simple linear data.  one record per observation. dsStageCyclePolar data.frame containing bands single period.  one record per theta per stage.  three stages, data.frame three times many rows dsLinear. xName variable name containing date. yName variable name containing dependent/criterion variable. stageIDName variable name indicating stage record belongs .  example, first interruption, StageID 1, 2 afterwards. periodicLowerName variable name showing lower bound stage's periodic estimate. periodicUpperName variable name showing upper bound stage's periodic estimate. paletteDark vector colors used dark/heavy graphical elements.  vector one color StageID value.  vector specified, default chosen, based number stages. paletteLight vector colors used light graphical elements.  vector one color StageID value.  vector specified, default chosen, based number stages. changePoints vector values indicate interruptions stages.  typically works best Date POSIXct class. changePointLabels text plotted interruption. drawObservedLine boolean value indicating longitudinal observed line plotted (whose values take dsLinear). drawPeriodicBand boolean value indicating bands plotted (whose values take periodicLowerName periodicUpperName fields). drawStageLabels boolean value indicating stage labels plotted (whose values take dsLinear). drawRadiusLabels boolean value indicating gridline/radius labels plotted (whose values take tickLocations). jaggedPointSize size observed data points. jaggedLineSize size line connecting observed data points. bandAlphaDark amount transparency band appropriate stage's x values. bandAlphaLight amount transparency band comparison stages given x value. colorLabels color cardinalLabels originLabel. colorGridlines color gridlines. labelColor color text labels imposed line. changeLineAlpha amount transparency marking interruption. changeLineSize width line marking interruption. tickLocations desired locations ticks showing value criterion/dependent variable. graphFloor value criterion/dependent variable center polar plot. graphCeiling value criterion/dependent variable outside polar plot. cardinalLabels four labels placed  `North', `East', `South', `West' typically . originLabel Explains criterion variable's value origin.  Use NULL explanation desired. plotMargins vector four numeric values, specifying number lines bottom, left, top right margins.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarPeriodic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polar Plot with Periodic Elements — PolarPeriodic","text":"Returns grid graphical object (ie, grob.)","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarPeriodic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polar Plot with Periodic Elements — PolarPeriodic","text":"","code":"library(grid) library(Wats) dsLinear <- CountyMonthBirthRate2005Version dsLinear <- dsLinear[dsLinear$CountyName==\"oklahoma\", ] dsLinear <- AugmentYearDataWithMonthResolution(dsLinear=dsLinear, dateName=\"Date\")  hSpread <- function( scores ) { return( quantile(x=scores, probs=c(.25, .75)) ) } portfolio <- AnnotateData(   dsLinear = dsLinear,   dvName = \"BirthRate\",   centerFunction = median,   spreadFunction = hSpread ) rm(dsLinear)  polarized <- PolarizeCartesian(   portfolio$dsLinear,   portfolio$dsStageCycle,   yName = \"BirthRate\",   stageIDName = \"StageID\" )  grid.newpage() PolarPeriodic(   dsLinear = polarized$dsObservedPolar,   dsStageCyclePolar = polarized$dsStageCyclePolar,   yName = \"Radius\",   stageIDName = \"StageID\",   cardinalLabels = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\") )   grid.newpage() PolarPeriodic(   dsLinear = polarized$dsObservedPolar,   dsStageCyclePolar = polarized$dsStageCyclePolar,   yName = \"Radius\",   stageIDName = \"StageID\",   drawPeriodicBand = FALSE )   grid.newpage() PolarPeriodic(   dsLinear = polarized$dsObservedPolar,   dsStageCyclePolar = polarized$dsStageCyclePolar,   yName = \"Radius\",   stageIDName = \"StageID\",   drawObservedLine = FALSE,   cardinalLabels = c(\"Jan1\", \"Apr1\", \"July1\", \"Oct1\") )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarizeCartesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulate Cartesian data to use in the WATS polar plot — PolarizeCartesian","title":"Manipulate Cartesian data to use in the WATS polar plot — PolarizeCartesian","text":"Three operations performed. First, within stage, first row repeated end, close loop. Second, multiple points interpolated (still Cartesian coordinates) polar graph sharp edges.  sharp edges artifacts conversion, reflect observed data. Third, Cartesian points coverted polar coordinates.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarizeCartesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manipulate Cartesian data to use in the WATS polar plot — PolarizeCartesian","text":"","code":"PolarizeCartesian(   dsLinear,   dsStageCycle,   yName,   stageIDName,   cycleTallyName = \"CycleTally\",   proportionThroughCycleName = \"ProportionThroughCycle\",   periodicLowerName = \"PositionLower\",   periodicCenterName = \"PositionCenter\",   periodicUpperName = \"PositionUpper\",   plottedPointCountPerCycle = 120,   graphFloor = min(base::pretty(x = dsLinear[, yName])) )"},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarizeCartesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulate Cartesian data to use in the WATS polar plot — PolarizeCartesian","text":"dsLinear data.frame containing simple linear data.  one record per observation. dsStageCycle data.frame containing reoccurring/periodic bands.  one record per observation per stage.  three stages, data.frame three times many rows dsLinear. yName variable name containing dependent/criterion variable. stageIDName variable name indicating stage record belongs .  example, first interruption, StageID 1, 2 afterwards. cycleTallyName variable name indicating many complete cycles occurred observation. proportionThroughCycleName variable name showing far cycle observation (summarized observations) occurred. periodicLowerName variable name showing lower bound stage's periodic estimate. periodicCenterName variable name showing center estimate stage's periodic estimate. periodicUpperName variable name showing upper bound stage's periodic estimate. plottedPointCountPerCycle number points plotted per cycle.  polar graph 'sharp corners', increase value. graphFloor value criterion/dependent variable center polar plot.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarizeCartesian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manipulate Cartesian data to use in the WATS polar plot — PolarizeCartesian","text":"Returns data.frame.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/PolarizeCartesian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulate Cartesian data to use in the WATS polar plot — PolarizeCartesian","text":"","code":"library(Wats) dsLinear <- CountyMonthBirthRate2005Version dsLinear <- dsLinear[dsLinear$CountyName==\"oklahoma\", ] dsLinear <- AugmentYearDataWithMonthResolution(dsLinear=dsLinear, dateName=\"Date\")  hSpread <- function( scores ) { return( quantile(x=scores, probs=c(.25, .75)) ) } portfolio <- AnnotateData(   dsLinear = dsLinear,   dvName = \"BirthRate\",   centerFunction = median,   spreadFunction = hSpread ) rm(dsLinear)  polarized <- PolarizeCartesian(   dsLinear = portfolio$dsLinear,   dsStageCycle = portfolio$dsStageCycle,   yName = \"BirthRate\",   stageIDName = \"StageID\" )  library(ggplot2) ggplot(polarized$dsStageCyclePolar, aes(color=factor(StageID))) +   geom_path(aes(x=PolarLowerX, y=PolarLowerY), linetype=2) +   geom_path(aes(x=PolarCenterX, y=PolarCenterY), size=2) +   geom_path(aes(x=PolarUpperX, y=PolarUpperY), linetype=2) +   geom_path(aes(x=ObservedX, y=ObservedY), data=polarized$dsObservedPolar) +   coord_fixed(ratio=1) +   guides(color=FALSE) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as #> of ggplot2 3.3.4."},{"path":"http://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap Around Time Series graphics — Wats-package","title":"Wrap Around Time Series graphics — Wats-package","text":"Wrap-around Time Series (WATS) Plots Interrupted Time Series Designs Seasonal Patterns","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Wrap Around Time Series graphics — Wats-package","text":"release version available CRAN running install.packages('Wats'). recent development version available GitHub running devtools::install_github (repo = 'OuhscBbmc/Wats') (make sure devtools already installed). trouble package, please install development version.  solve problem, please create new issue, email .","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wrap Around Time Series graphics — Wats-package","text":"Rodgers, J.L., Beasley, W.H., Schuelke, M. (2014). Graphical Data Analysis Circle:  Wrap-around Time Series Plots (Interrupted) Time Series Designs. Multivariate Behavioral Research. Rodgers, J.L., St. John, C. . & Coleman R. (2005). Fertility Go Oklahoma City Bombing?  Analysis Births Metropolitan Counties Oklahoma, 1990-1999. Demography, 42, 675-692.","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrap Around Time Series graphics — Wats-package","text":"William Howard Beasley  --Associate Professor Research, University Oklahoma Health Sciences Center,  Dept Pediatrics,   Biomedical Behavioral Methodology Core (BBMC) Joseph Lee Rodgers  --Director, Quantitative Methods, Department Psychology Human Development,  Peabody College, 230 Appleton Pl #552, Hobbs 202C, Vanderbilt University, Nashville, TN 37203. [Matthew Schuelke](https://www.slu.edu/slucor/faculty/schuelke-matt.php)  --Senior Statistician, Office Vice President Research  Saint Louis University","code":""},{"path":"http://ouhscbbmc.github.io/Wats/reference/Wats-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap Around Time Series graphics — Wats-package","text":"","code":"if (FALSE) { # Install/update Wats with the release version from CRAN. install.packages('Wats')  # Install/update Wats with the development version from GitHub #install.packages('devtools') #Uncomment if `devtools` isn't installed already. devtools::install_github('OuhscBbmc/Wats') }"}]
